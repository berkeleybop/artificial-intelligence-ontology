{
  "graphs" : [ {
    "id" : "https://w3id.org/aio/aio.json",
    "meta" : {
      "basicPropertyValues" : [ {
        "pred" : "http://purl.org/dc/terms/description",
        "val" : "This ontology models classes and relationships describing deep learning networks, their component layers and activation functions, as well as potential biases."
      }, {
        "pred" : "http://purl.org/dc/terms/license",
        "val" : "http://creativecommons.org/licenses/by/4.0/"
      }, {
        "pred" : "http://purl.org/dc/terms/title",
        "val" : "Artificial Intelligence Ontology"
      }, {
        "pred" : "http://www.w3.org/2002/07/owl#versionInfo",
        "val" : "2024-11-11"
      } ],
      "version" : "https://w3id.org/aio/releases/2024-11-11/aio.json"
    },
    "nodes" : [ {
      "id" : "https://w3id.org/aio/AbstractRNNCell",
      "lbl" : "AbstractRNNCell",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer representing an RNN cell that is the base class for implementing RNN cells with custom behavior.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/AbstractRNNCell" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ActivationLayer",
      "lbl" : "Activation Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that applies an activation function to an output.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Activation" ]
        },
        "comments" : [ "Applies an activation function to an output." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ActiveLearning",
      "lbl" : "Active Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods that interactively query a user or another information source to label new data points with the desired outputs.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Active_learning_(machine_learning)" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Query Learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ActivityBias",
      "lbl" : "Activity Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A use and interpretation bias occurring when systems/platforms get training data from their most active users rather than less active or inactive users.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Interpretive_bias" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ActivityRegularizationLayer",
      "lbl" : "ActivityRegularization Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regularization layer that applies an update to the cost function based on input activity.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ActivityRegularization" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AdaptiveAvgPool1DLayer",
      "lbl" : "AdaptiveAvgPool1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 1D adaptive average pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AdaptiveAvgPool1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AdaptiveAvgPool2DLayer",
      "lbl" : "AdaptiveAvgPool2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 2D adaptive average pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AdaptiveAvgPool2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AdaptiveAvgPool3DLayer",
      "lbl" : "AdaptiveAvgPool3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 3D adaptive average pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AdaptiveAvgPool3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AdaptiveMaxPool1DLayer",
      "lbl" : "AdaptiveMaxPool1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 1D adaptive max pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AdaptiveMaxPool1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AdaptiveMaxPool2DLayer",
      "lbl" : "AdaptiveMaxPool2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 2D adaptive max pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AdaptiveMaxPool2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AdaptiveMaxPool3DLayer",
      "lbl" : "AdaptiveMaxPool3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 3D adaptive max pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AdaptiveMaxPool3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AddLayer",
      "lbl" : "Add Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A merging layer that adds a list of inputs taking as input a list of tensors all of the same shape.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Add" ]
        },
        "comments" : [ "Layer that adds a list of inputs. It takes as input a list of tensors, all of the same shape, and returns a single tensor (also of the same shape)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AdditionLayer",
      "lbl" : "Addition Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that adds inputs from one or more other layers to cells or neurons of a target layer."
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AdditiveAttentionLayer",
      "lbl" : "AdditiveAttention Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An attention layer that implements additive attention also known as Bahdanau-style attention.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/AdditiveAttention" ]
        },
        "comments" : [ "Additive attention layer, a.k.a. Bahdanau-style attention." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AlphaDropoutLayer",
      "lbl" : "AlphaDropout Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regularization layer that applies Alpha Dropout to the input keeping mean and variance of inputs to ensure self-normalizing property.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/AlphaDropout" ]
        },
        "comments" : [ "Applies Alpha Dropout to the input. Alpha Dropout is a Dropout that keeps mean and variance of inputs to their original values, in order to ensure the self-normalizing property even after this dropout. Alpha Dropout fits well to Scaled Exponential Linear Units by randomly setting activations to the negative saturation value." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AmplificationBias",
      "lbl" : "Amplification Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A processing bias arising when the distribution over prediction outputs is skewed compared to the prior distribution of the prediction target.",
          "xrefs" : [ "https://royalsocietypublishing.org/doi/10.1098/rspb.2019.0165#d1e5237" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AnchoringBias",
      "lbl" : "Anchoring Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias characterized by the influence of a reference point or anchor on decisions leading to insufficient adjustment from that anchor point.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AnnotatorReportingBias",
      "lbl" : "Annotator Reporting Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias occurring when users rely on automation as a heuristic replacement for their own information seeking and processing.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ArtificialNeuralNetwork",
      "lbl" : "Artificial Neural Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A network based on a collection of connected units called artificial neurons modeled after biological neurons.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Artificial_neural_network" ]
        },
        "comments" : [ "An artificial neural network (ANN) is based on a collection of connected units or nodes called artificial neurons, modeled after biological neurons, with connections transmitting signals processed by non-linear functions." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ANN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "NN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AssociationRuleLearning",
      "lbl" : "Association Rule Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A supervised learning focused on a rule-based approach for discovering interesting relations between variables in large databases.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Association_rule_learning" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AttentionLayer",
      "lbl" : "Attention Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that implements dot-product attention also known as Luong-style attention.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Attention" ]
        },
        "comments" : [ "Dot-product attention layer, a.k.a. Luong-style attention." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AutoEncoderNetwork",
      "lbl" : "Auto Encoder Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An unsupervised pretrained network that learns efficient codings of unlabeled data by training to ignore insignificant data and regenerate input from encoding.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Autoencoder" ]
        },
        "comments" : [ "Layers: Input, Hidden, Matched Output-Input" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AE"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AutomationComplacencyBias",
      "lbl" : "Automation Complacency Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias characterized by over-reliance on automated systems leading to attenuated human skills.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Over-reliance on automated systems, leading to attenuated human skills, such as with spelling and autocorrect." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Automation Complaceny"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AutoregressiveConditionalHeteroskedasticity",
      "lbl" : "Autoregressive Conditional Heteroskedasticity",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model that describes the variance of the current error term as a function of the previous periods' error terms, capturing volatility clustering. Used for time series data."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ARCH"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AutoregressiveDistributedLag",
      "lbl" : "Autoregressive Distributed Lag",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model that includes lagged values of both the dependent variable and one or more independent variables, capturing dynamic relationships over time. Used in time series analysis."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ARDL"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AutoregressiveIntegratedMovingAverage",
      "lbl" : "Autoregressive Integrated Moving Average",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model which combines autoregression (AR), differencing (I), and moving average (MA) components. Used for analyzing and forecasting time series data."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ARIMA"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AutoregressiveLanguageModel",
      "lbl" : "Autoregressive Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that generates text sequentially predicting one token at a time based on the previously generated tokens excelling at natural language generation tasks by modeling the probability distribution over sequences of tokens."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "generative language model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "sequence-to-sequence model"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AutoregressiveMovingAverage",
      "lbl" : "Autoregressive Moving Average",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model that combines autoregressive (AR) and moving average (MA) components to represent time series data, suitable for stationary series without the need for differencing."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ARMA"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AvailabilityHeuristicBias",
      "lbl" : "Availability Heuristic Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias characterized by a mental shortcut where easily recalled information is overweighted in judgment and decision-making.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Availability Bias"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Availability Heuristic"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AverageLayer",
      "lbl" : "Average Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A merging layer that averages a list of inputs element-wise taking as input a list of tensors all of the same shape.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Average" ]
        },
        "comments" : [ "Layer that averages a list of inputs element-wise. It takes as input a list of tensors, all of the same shape, and returns a single tensor (also of the same shape)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/AveragePooling1DLayer",
      "lbl" : "AveragePooling1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs average pooling for temporal data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/AveragePooling1D" ]
        },
        "comments" : [ "Average pooling for temporal data. Downsamples the input representation by taking the average value over the window defined by pool_size. The window is shifted by strides. The resulting output when using \"valid\" padding option has a shape of: output_shape = (input_shape - pool_size + 1) / strides). The resulting output shape when using the \"same\" padding option is: output_shape = input_shape / strides." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AvgPool1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AveragePooling2DLayer",
      "lbl" : "AveragePooling2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs average pooling for spatial data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/AveragePooling2D" ]
        },
        "comments" : [ "Average pooling operation for spatial data. Downsamples the input along its spatial dimensions (height and width) by taking the average value over an input window (of size defined by pool_size) for each channel of the input. The window is shifted by strides along each dimension. The resulting output when using \"valid\" padding option has a shape (number of rows or columns) of: output_shape = math.floor((input_shape - pool_size) / strides) + 1 (when input_shape >= pool_size). The resulting output shape when using the \"same\" padding option is: output_shape = math.floor((input_shape - 1) / strides) + 1." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AvgPool2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AveragePooling3DLayer",
      "lbl" : "AveragePooling3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs average pooling for 3D data (spatial or spatio-temporal).",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/AveragePooling3D" ]
        },
        "comments" : [ "Average pooling operation for 3D data (spatial or spatio-temporal). Downsamples the input along its spatial dimensions (depth, height, and width) by taking the average value over an input window (of size defined by pool_size) for each channel of the input. The window is shifted by strides along each dimension." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AvgPool3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AvgPool1DLayer",
      "lbl" : "AvgPool1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 1D average pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AvgPool1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AvgPool2DLayer",
      "lbl" : "AvgPool2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 2D average pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AvgPool2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/AvgPool3DLayer",
      "lbl" : "AvgPool3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 3D average pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AvgPool3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/BackfedInputLayer",
      "lbl" : "Backfed Input Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An input layer that receives values from another layer."
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/BatchNorm1DLayer",
      "lbl" : "BatchNorm1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A batch normalization layer that applies Batch Normalization over a 2D or 3D input.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies Batch Normalization over a 2D or 3D input as described in the paper Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift ." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "BatchNorm1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/BatchNorm2DLayer",
      "lbl" : "BatchNorm2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A batch normalization layer that applies Batch Normalization over a 4D input.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies Batch Normalization over a 4D input (a mini-batch of 2D inputs with additional channel dimension) as described in the paper Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift ." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "BatchNorm2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/BatchNorm3DLayer",
      "lbl" : "BatchNorm3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A batch normalization layer that applies Batch Normalization over a 5D input.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies Batch Normalization over a 5D input (a mini-batch of 3D inputs with additional channel dimension) as described in the paper Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift ." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "BatchNorm3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/BatchNormalizationLayer",
      "lbl" : "BatchNormalization Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that normalizes its inputs applying a transformation that maintains the mean close to 0 and the standard deviation close to 1.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/BatchNormalization" ]
        },
        "comments" : [ "Layer that normalizes its inputs. Batch normalization applies a transformation that maintains the mean output close to 0 and the output standard deviation close to 1. Importantly, batch normalization works differently during training and during inference. During training (i.e. when using fit() or when calling the layer/model with the argument training=True), the layer normalizes its output using the mean and standard deviation of the current batch of inputs. That is to say, for each channel being normalized, the layer returns gamma * (batch - mean(batch)) / sqrt(var(batch) + epsilon) + beta, where: epsilon is small constant (configurable as part of the constructor arguments), gamma is a learned scaling factor (initialized as 1), which can be disabled by passing scale=False to the constructor. beta is a learned offset factor (initialized as 0), which can be disabled by passing center=False to the constructor. During inference (i.e. when using evaluate() or predict() or when calling the layer/model with the argument training=False (which is the default), the layer normalizes its output using a moving average of the mean and standard deviation of the batches it has seen during training. That is to say, it returns gamma * (batch - self.moving_mean) / sqrt(self.moving_var + epsilon) + beta. self.moving_mean and self.moving_var are non-trainable variables that are updated each time the layer in called in training mode, as such: moving_mean = moving_mean * momentum + mean(batch) * (1 - momentum) moving_var = moving_var * momentum + var(batch) * (1 - momentum)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "BatchNorm"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/BayesianNetwork",
      "lbl" : "Bayesian Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A network that is a probabilistic graphical model representing variables and their conditional dependencies via a directed acyclic graph.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Bayesian_network" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/BehavioralBias",
      "lbl" : "Behavioral Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias characterized by systematic distortions in user behavior across platforms or contexts or across users represented in different datasets.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Systematic distortions in user behavior across platforms or contexts, or across users represented in different datasets." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Bias",
      "lbl" : "Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A systematic error introduced into sampling or testing by selecting or encouraging one outcome or answer over others.",
          "xrefs" : [ "https://www.merriam-webster.com/dictionary/bias" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Biclustering",
      "lbl" : "Biclustering",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods that simultaneously cluster the rows and columns of a matrix to identify submatrices with coherent patterns.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Biclustering" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Block Clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Co-clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Joint Clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Two-mode Clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Two-way Clustering"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/BidirectionalLayer",
      "lbl" : "Bidirectional Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A recurrent layer that is a bidirectional wrapper for RNNs.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Bidirectional" ]
        },
        "comments" : [ "Bidirectional wrapper for RNNs." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/BidirectionalTransformerLanguageModel",
      "lbl" : "Bidirectional Transformer Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A transformer language model such as BERT that uses the transformer architecture to build deep bidirectional representations by predicting masked tokens based on their context.",
          "xrefs" : [ "https://arxiv.org/abs/1810.04805", "https://en.wikipedia.org/wiki/BERT_(language_model)" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "BERT"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Bidirectional Transformer LM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/BinaryClassification",
      "lbl" : "Binary Classification",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A classification focused on methods that classify elements into two groups based on a classification rule.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Binary_classification" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/BoltzmannMachineNetwork",
      "lbl" : "Boltzmann Machine Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A symmetrically connected network that is a type of stochastic recurrent neural network and Markov random field.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Boltzmann_machine" ]
        },
        "comments" : [ "Layers: Backfed Input, Probabilistic Hidden" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "BM"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Sherrington–Kirkpatrick model with external field"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "stochastic Hopfield network with hidden units"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "stochastic Ising-Lenz-Little model"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/CategoricalFeaturesPreprocessingLayer",
      "lbl" : "Categorical Features Preprocessing Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that performs categorical data preprocessing operations.",
          "xrefs" : [ "https://keras.io/guides/preprocessing_layers/" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/CategoryEncodingLayer",
      "lbl" : "CategoryEncoding Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A categorical features preprocessing layer that encodes integer features providing options for condensing data into a categorical encoding.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/CategoryEncoding" ]
        },
        "comments" : [ "A preprocessing layer which encodes integer features. This layer provides options for condensing data into a categorical encoding when the total number of tokens are known in advance. It accepts integer values as inputs, and it outputs a dense or sparse representation of those inputs. For integer inputs where the total number of tokens is not known, use tf.keras.layers.IntegerLookup instead." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/CausalGraphicalModel",
      "lbl" : "Causal Graphical Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A probabilistic graphical model used to encode assumptions about the data-generating process.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Causal_graph" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Casaul Bayesian Network"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Casaul Graph"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "DAG"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Directed Acyclic Graph"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Path Diagram"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/CausalLLM",
      "lbl" : "Causal LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that only attends to previous tokens in the sequence when generating text modeling the probability distribution autoregressively from left-to-right or causally."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Causal Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "autoregressive"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "unidirectional"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/CenterCropLayer",
      "lbl" : "CenterCrop Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that crops the central portion of images to a target size.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/CenterCrop" ]
        },
        "comments" : [ "A preprocessing layer which crops images. This layers crops the central portion of the images to a target size. If an image is smaller than the target size, it will be resized and cropped so as to return the largest possible window in the image that matches the target aspect ratio. Input pixel values can be of any range (e.g. [0., 1.) or [0, 255]) and of interger or floating point dtype. By default, the layer will output floats." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Classification",
      "lbl" : "Classification",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A supervised learning focused on methods that distinguish and distribute kinds of \"things\" into different groups.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Classification_(general_theory)" ]
        },
        "comments" : [ "Methods that distinguish and distribute kinds of \"things\" into different groups." ],
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Cleaning",
      "lbl" : "Cleaning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A data preparation that removes noise inconsistencies and irrelevant information from data to enhance its quality and prepare it for analysis or further processing."
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Data Cleansing"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Standardization"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Data cleaning"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Text normalization"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/Clustering",
      "lbl" : "Clustering",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods that group a set of objects such that objects in the same group are more similar to each other than to those in other groups.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Cluster_analysis" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Cluster analysis"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/CognitiveBias",
      "lbl" : "Cognitive Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias characterized by deviations from rational judgment and decision-making including adaptive mental shortcuts known as heuristics.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/CompositionalGeneralizationLLM",
      "lbl" : "Compositional Generalization LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is trained to understand and recombine the underlying compositional structures in language enabling better generalization to novel combinations and out-of-distribution examples."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Compositional Generalization Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "out-of-distribution generalization"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "systematic generalization"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ComputationalBias",
      "lbl" : "Computational Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A bias caused by differences between results and facts in the process of data analysis (including the source of data the estimator chose) and analysis methods.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Statistical Bias"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ConcatenateLayer",
      "lbl" : "Concatenate Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A merging layer that concatenates a list of inputs taking as input a list of tensors all of the same shape except for the concatenation axis.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Concatenate" ]
        },
        "comments" : [ "Layer that concatenates a list of inputs. It takes as input a list of tensors, all of the same shape except for the concatenation axis, and returns a single tensor that is the concatenation of all inputs." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ConceptDriftBias",
      "lbl" : "Concept Drift Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A use and interpretation bias due to the use of a system outside its planned domain of application causing performance gaps between laboratory settings and the real world.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Concept Drift"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ConfirmationBias",
      "lbl" : "Confirmation Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias characterized by the tendency to prefer information that confirms existing beliefs influencing the search for interpretation of and recall of information.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "The tendency to prefer information that confirms existing beliefs, influencing the search for, interpretation of, and recall of information." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ConsumerBias",
      "lbl" : "Consumer Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias arising when an algorithm or platform provides users a venue to express their biases occurring from either side in a digital interaction.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ContentProductionBias",
      "lbl" : "Content Production Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A use and interpretation bias arising from structural lexical semantic and syntactic differences in user-generated content.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Bias from structural, lexical, semantic, and syntactic differences in user-generated content." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ContinualLearning",
      "lbl" : "Continual Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that learns sequential tasks without forgetting knowledge from preceding tasks and without access to old task data during new task training.",
          "xrefs" : [ "https://paperswithcode.com/task/continual-learning" ]
        },
        "comments" : [ "Learning a model for sequential tasks without forgetting knowledge from preceding tasks, with no access to old task data during new task training." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Incremental Learning"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Life-Long Learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ContinualLearningLLM",
      "lbl" : "Continual Learning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that continually acquires new knowledge and skills over time without forgetting previously learned information allowing the model to adapt and expand its capabilities as new data becomes available."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "CL-Large Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Continual Learning Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "catastrophic forgetting"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "lifelong learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ContrastiveLearning",
      "lbl" : "Contrastive Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network self-supervised learning approach that learns to distinguish between similar and dissimilar data samples.",
          "xrefs" : [ "https://arxiv.org/abs/2202.14037" ]
        },
        "comments" : [ "Contrastive learning is a self-supervised learning approach in which the model learns to distinguish between similar and dissimilar pairs of data samples. By maximizing the similarity between positive pairs (similar samples) and minimizing the similarity between negative pairs (dissimilar samples), the model learns to capture meaningful representations of the data. This method is particularly effective for representation learning and is widely used in tasks such as image classification, clustering, and retrieval. Contrastive learning techniques often employ loss functions such as the contrastive loss or the triplet loss to achieve these objectives." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ContrastiveLearningLLM",
      "lbl" : "Contrastive Learning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is trained to pull semantically similar samples closer together and push dissimilar samples apart in the representation space learning high-quality features useful for downstream tasks."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "Representation learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ControllableLLM",
      "lbl" : "Controllable LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that allows for explicit control over certain attributes of the generated text such as style tone topic or other desired characteristics through conditioning or specialized training objectives."
        },
        "comments" : [ "A controllable LLM allows for explicit control over certain attributes of the generated text, such as style, tone, topic, or other desired characteristics, through conditioning or specialized training objectives." ],
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Controllable Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "conditional generation"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "guided generation"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ConvLSTM1DLayer",
      "lbl" : "ConvLSTM1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that implements a 1D Convolutional LSTM similar to an LSTM but with convolutional input and recurrent transformations.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ConvLSTM1D" ]
        },
        "comments" : [ "1D Convolutional LSTM. Similar to an LSTM layer, but the input transformations and recurrent transformations are both convolutional." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ConvLSTM2DLayer",
      "lbl" : "ConvLSTM2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that implements a 2D Convolutional LSTM similar to an LSTM but with convolutional input and recurrent transformations.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ConvLSTM2D" ]
        },
        "comments" : [ "2D Convolutional LSTM. Similar to an LSTM layer, but the input transformations and recurrent transformations are both convolutional." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ConvLSTM3DLayer",
      "lbl" : "ConvLSTM3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that implements a 3D Convolutional LSTM similar to an LSTM but with convolutional input and recurrent transformations.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ConvLSTM3D" ]
        },
        "comments" : [ "3D Convolutional LSTM. Similar to an LSTM layer, but the input transformations and recurrent transformations are both convolutional." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Convolution1DLayer",
      "lbl" : "Convolution1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that implements 1D convolution (e.g. temporal convolution).",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv1D" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Conv1D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Conv1D Layer"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Convolution1D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "nn.Conv1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/Convolution1DTransposeLayer",
      "lbl" : "Convolution1DTranspose Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that implements transposed 1D convolution sometimes called deconvolution.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv1DTranspose" ]
        },
        "comments" : [ "Transposed convolution layer (sometimes called Deconvolution). The need for transposed convolutions generally arises from the desire to use a transformation going in the opposite direction of a normal convolution, i.e., from something that has the shape of the output of some convolution to something that has the shape of its input while maintaining a connectivity pattern that is compatible with said convolution. When using this layer as the first layer in a model, provide the keyword argument input_shape (tuple of integers or None, does not include the sample axis), e.g. input_shape=(128, 3) for data with 128 time steps and 3 channels." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Conv1DTranspose Layer"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "ConvTranspose1D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Convolution1DTranspose"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "nn.ConvTranspose1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/Convolution2DLayer",
      "lbl" : "Convolution2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that implements 2D convolution (e.g. spatial convolution over images).",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv2D" ]
        },
        "comments" : [ "2D convolution layer (e.g. spatial convolution over images). This layer creates a convolution kernel that is convolved with the layer input to produce a tensor of outputs. If use_bias is True, a bias vector is created and added to the outputs. Finally, if activation is not None, it is applied to the outputs as well. When using this layer as the first layer in a model, provide the keyword argument input_shape (tuple of integers or None, does not include the sample axis), e.g. input_shape=(128, 128, 3) for 128x128 RGB pictures in data_format=\"channels_last\". You can use None when a dimension has variable size." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Conv2D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Conv2D Layer"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Convolution2D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "nn.Conv2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/Convolution2DTransposeLayer",
      "lbl" : "Convolution2DTranspose Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that implements transposed 2D convolution",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv2DTranspose" ]
        },
        "comments" : [ "Transposed convolution layer (sometimes called Deconvolution)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Conv2DTranspose Layer"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "ConvTranspose2D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Convolution2DTranspose"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "nn.ConvTranspose2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/Convolution3DLayer",
      "lbl" : "Convolution3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that implements 3D convolution (e.g. spatial convolution over volumes).",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv3D" ]
        },
        "comments" : [ "3D convolution layer (e.g. spatial convolution over volumes). This layer creates a convolution kernel that is convolved with the layer input to produce a tensor of outputs. If use_bias is True, a bias vector is created and added to the outputs. Finally, if activation is not None, it is applied to the outputs as well. When using this layer as the first layer in a model, provide the keyword argument input_shape (tuple of integers or None, does not include the sample axis), e.g. input_shape=(128, 128, 128, 1) for 128x128x128 volumes with a single channel, in data_format=\"channels_last\"." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Conv3D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Conv3D Layer"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Convolution3D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "nn.Conv3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/Convolution3DTransposeLayer",
      "lbl" : "Convolution3DTranspose Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that implements transposed 3D convolution",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv3DTranspose" ]
        },
        "comments" : [ "Transposed convolution layer (sometimes called Deconvolution). The need for transposed convolutions generally arises from the desire to use a transformation going in the opposite direction of a normal convolution, i.e., from something that has the shape of the output of some convolution to something that has the shape of its input while maintaining a connectivity pattern that is compatible with said convolution. When using this layer as the first layer in a model, provide the keyword argument input_shape (tuple of integers or None, does not include the sample axis), e.g. input_shape=(128, 128, 128, 3) for a 128x128x128 volume with 3 channels if data_format=\"channels_last\"." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Conv3DTranspose Layer"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "ConvTranspose3D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Convolution3DTranspose"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "nn.ConvTranspose3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ConvolutionalLayer",
      "lbl" : "Convolutional Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that contains a set of filters (or kernels) parameters of which are to be learned throughout the training.",
          "xrefs" : [ "https://www.sciencedirect.com/topics/engineering/convolutional-layer" ]
        },
        "comments" : [ "A convolutional layer is the main building block of a CNN. It contains a set of filters (or kernels), parameters of which are to be learned throughout the training. The size of the filters is usually smaller than the actual image. Each filter convolves with the image and creates an activation map." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Cropping1DLayer",
      "lbl" : "Cropping1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A reshaping layer that crops along the time dimension (axis 1) for 1D input.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Cropping1D" ]
        },
        "comments" : [ "Cropping layer for 1D input (e.g. temporal sequence). It crops along the time dimension (axis 1)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Cropping2DLayer",
      "lbl" : "Cropping2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that crops along spatial dimensions (i.e. height and width) for 2D input.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Cropping2D" ]
        },
        "comments" : [ "Cropping layer for 2D input (e.g. picture). It crops along spatial dimensions, i.e. height and width." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Cropping3DLayer",
      "lbl" : "Cropping3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that crops along spatial dimensions (depth",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Cropping3D" ]
        },
        "comments" : [ "Cropping layer for 3D data (e.g. spatial or spatio-temporal)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/CrossDomainLLM",
      "lbl" : "Cross-Domain LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that performs well across a wide range of domains without significant loss in performance, facilitated by advanced domain adaptation techniques."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Domain-General LLM"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "cross-domain transfer"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "domain adaptation"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/CurriculumLearning",
      "lbl" : "Curriculum Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A training strategy in machine learning where models are trained on data in a meaningful order starting with simpler examples and gradually increasing the complexity to improve learning efficiency and model performance."
        },
        "subsets" : [ "https://w3id.org/aio/TrainingStrategySubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Sequential Learning"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Structured Learning"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Complexity grading"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Sequential learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/CurriculumLearningLLM",
      "lbl" : "Curriculum Learning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is trained by presenting learning examples in a meaningful order from simple to complex mimicking the learning trajectory followed by humans."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "Learning progression"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DataAugmentation",
      "lbl" : "Data Augmentation",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A data enhancement used to increase the diversity and quantity of training data by applying various transformations such as rotation scaling flipping and cropping to existing data samples enhancing the robustness and performance of machine learning models."
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Data Enrichment"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Data Expansion"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Paraphrasing"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Synonym replacement"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DataDredgingBias",
      "lbl" : "Data Dredging Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A use and interpretation bias where testing many hypotheses in a dataset may yield apparent statistical significance even when results are nonsignificant.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Data Dredging"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DataEnhancement",
      "lbl" : "DataEnhancement",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A preprocessing used to improve the quality diversity and volume of data available for training machine learning models, such as data augmentation synthesis and enrichment to enhance model robustness and accuracy."
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "AIO:PreprocessingSubset"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DataGenerationBias",
      "lbl" : "Data Generation Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias arising from adding synthetic or redundant data samples to a dataset.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Selection_bias" ]
        },
        "comments" : [ "Bias from adding synthetic or redundant data samples to a dataset." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DataImputation",
      "lbl" : "Data Imputation",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods that replace missing data with substituted values.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Imputation_(statistics)" ]
        },
        "comments" : [ "Methods that replace missing data with substituted values." ],
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DataPreparation",
      "lbl" : "Data Preparation",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A preprocessing that cleans, transforms and organizes raw data into a suitable format for analysis and modeling, ensuring the quality and relevance of the data for machine learning tasks."
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Data Assembly"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Data Curation"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Data Processing"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DatatoTextLLM",
      "lbl" : "Data-to-Text LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that generates natural language descriptions from structured data sources like tables, graphs, and knowledge bases, requiring grounding in meaning representations."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Meaning representation"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DecisionTree",
      "lbl" : "Decision Tree",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A classification that uses a tree-like model of decisions and their possible consequences including chance event outcomes resource costs and utilities.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Decision_tree" ]
        },
        "comments" : [ "A decision support tool that uses a tree-like model of decisions and their possible consequences, including chance event outcomes, resource costs, and utilities." ],
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DecoderLLM",
      "lbl" : "Decoder LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that uses a decoder-only architecture consisting of only a decoder trained to predict the next token in a sequence given the previous tokens.",
          "xrefs" : [ "https://www.practicalai.io/understanding-transformer-model-architectures/#:~:text=Encoder" ]
        },
        "comments" : [ "A decoder-only architecture consisting of only a decoder, trained to predict the next token in a sequence given the previous tokens. Unlike the encoder-decoder architecture, it does not have an explicit encoder and encodes information implicitly in the hidden state of the decoder, updated at each step of the generation process." ],
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DeconvolutionalNetwork",
      "lbl" : "Deconvolutional Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that uses deconvolution for unsupervised construction of hierarchical image representations.",
          "xrefs" : [ "https://ieeexplore.ieee.org/document/5539957" ]
        },
        "comments" : [ "Layers: Input, Kernel, Convolutional/Pool, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "DN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DeepActiveLearning",
      "lbl" : "Deep Active Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that combines deep learning and active learning to maximize model performance while annotating the fewest samples possible.",
          "xrefs" : [ "https://arxiv.org/pdf/2009.00236.pdf" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "DeepAL"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DeepBeliefNetwork",
      "lbl" : "Deep Belief Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An unsupervised pretrained network composed of multiple layers of latent variables that learns to probabilistically reconstruct inputs and perform classification.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Deep_belief_network" ]
        },
        "comments" : [ "Layers: Backfed Input, Probabilistic Hidden, Hidden, Matched Output-Input" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "DBN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DeepConvolutionalInverseGraphicsNetwork",
      "lbl" : "Deep Convolutional Inverse Graphics Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An autoencoder network that learns interpretable disentangled image representations through convolution and de-convolution layers trained with the stochastic gradient variational Bayes algorithm."
        },
        "comments" : [ "Layers: Input, Kernel, Convolutional/Pool, Probabilistic Hidden, Convolutional/Pool, Kernel, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "DCIGN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DeepConvolutionalNetwork",
      "lbl" : "Deep Convolutional Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network specialized for analyzing visual imagery using shared-weight architecture and translation-equivariant feature maps.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Convolutional_neural_network" ]
        },
        "comments" : [ "Layers: Input, Kernel, Convolutional/Pool, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "CNN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "ConvNet"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Convolutional Neural Network"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "DCN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DeepFeedForwardNetwork",
      "lbl" : "Deep Feed-Forward Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that processes information in one direction—from input nodes through hidden nodes to output nodes—without cycles or loops.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Feedforward_neural_network" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "DFF"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "MLP"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Multilayer Perceptoron"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DeepNeuralNetwork",
      "lbl" : "Deep Neural Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An artificial neural network characterized by multiple hidden layers between the input and output layers."
        },
        "comments" : [ "A deep neural network (DNN) is a type of artificial neural network (ANN) characterized by multiple hidden layers between the input and output layers. Each layer consists of interconnected neurons that process and transmit information. DNNs can model complex patterns and representations in data through their hierarchical structure, where each layer extracts increasingly abstract features from the input. DNNs are widely used in various applications, including image and speech recognition, natural language processing, and more, due to their ability to learn and generalize from large amounts of data." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "DNN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DeepTransferLearning",
      "lbl" : "Deep Transfer Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that relaxes the hypothesis that training data must be independent and identically distributed with test data to address insufficient training data.",
          "xrefs" : [ "https://arxiv.org/abs/1808.01974" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DenoisingAutoEncoder",
      "lbl" : "Denoising Auto Encoder",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An autoencoder network trained to reconstruct the original undistorted input from a partially corrupted input.",
          "xrefs" : [ "https://doi.org/10.1145/1390156.1390294" ]
        },
        "comments" : [ "Layers: Noisy Input, Hidden, Matched Output-Input" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "DAE"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Denoising Autoencoder"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DenseFeaturesLayer",
      "lbl" : "DenseFeatures Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that produces a dense tensor based on given feature columns.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/DenseFeatures" ]
        },
        "comments" : [ "A layer that produces a dense Tensor based on given feature_columns. Generally a single example in training data is described with FeatureColumns. At the first layer of the model, this column oriented data should be converted to a single Tensor. This layer can be called multiple times with different features. This is the V2 version of this layer that uses name_scopes to create variables instead of variable_scopes. But this approach currently lacks support for partitioned variables. In that case, use the V1 version instead." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DenseLayer",
      "lbl" : "Dense Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that is a regular densely-connected neural network layer.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Dense" ]
        },
        "comments" : [ "Just your regular densely-connected NN layer." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DeploymentBias",
      "lbl" : "Deployment Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A group bias arising when systems are used as decision aids for humans since the human intermediary may act on predictions in ways that are typically not modeled in the system.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DepthwiseConv1DLayer",
      "lbl" : "DepthwiseConv1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that performs depthwise 1D convolution",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/DepthwiseConv1D" ]
        },
        "comments" : [ "Depthwise 1D convolution. Depthwise convolution is a type of convolution in which each input channel is convolved with a different kernel (called a depthwise kernel). You can understand depthwise convolution as the first step in a depthwise separable convolution. It is implemented via the following steps: Split the input into individual channels. Convolve each channel with an individual depthwise kernel with depth_multiplier output channels. Concatenate the convolved outputs along the channels axis. Unlike a regular 1D convolution, depthwise convolution does not mix information across different input channels. The depth_multiplier argument determines how many filter are applied to one input channel. As such, it controls the amount of output channels that are generated per input channel in the depthwise step." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DepthwiseConv2DLayer",
      "lbl" : "DepthwiseConv2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that performs depthwise 2D convolution",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/DepthwiseConv2D" ]
        },
        "comments" : [ "Depthwise 2D convolution." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DetectionBias",
      "lbl" : "Detection Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias characterized by systematic differences between groups in how outcomes are determined potentially over- or underestimating effect size.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Systematic differences between groups in how outcomes are determined, potentially over- or underestimating effect size." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DialogueLLM",
      "lbl" : "Dialogue LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is optimized for engaging in multi-turn conversations understanding context and generating relevant coherent responses continuously over many dialogue turns."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Dialogue Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "conversational AI"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "multi-turn dialogue"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DifferentiableLLM",
      "lbl" : "Differentiable LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that has an architecture amenable to full end-to-end training via backpropagation without relying on teacher forcing or unlikelihood training objectives."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Differentiable Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "end-to-end training"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "fully backpropagable"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DimensionalityReduction",
      "lbl" : "Dimensionality Reduction",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An unsupervised learning focused on the process of transforming data from a high-dimensional space into a lower-dimensional space while retaining meaningful properties of the original data.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Dimensionality_reduction" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Dimension Reduction"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DiscretizationLayer",
      "lbl" : "Discretization Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A numerical features prepreprocessing layer which buckets continuous features by ranges.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Discretization" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Distillation",
      "lbl" : "Distillation",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A preprocessing that trains a smaller model to replicate the behavior of a larger model aiming to compress the knowledge into a more compact form without significant loss of performance.",
          "xrefs" : [ "https://doi.org/10.48550/arXiv.2105.13093" ]
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Purification"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Refining"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Knowledge compression"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Teacher-student model"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DomainAdaptedLLM",
      "lbl" : "Domain-Adapted LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which is pre-trained on a broad corpus and then fine-tuned on domain-specific data to specialize its capabilities for particular domains or applications, like scientific literature or code generation."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Domain-Adapted Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "domain robustness"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "transfer learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DotLayer",
      "lbl" : "Dot Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that computes a dot product between samples in two tensors.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Dot" ]
        },
        "comments" : [ "Layer that computes a dot product between samples in two tensors. E.g. if applied to a list of two tensors a and b of shape (batch_size, n), the output will be a tensor of shape (batch_size, 1) where each entry i will be the dot product between a[i] and b[i]." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DropoutLayer",
      "lbl" : "Dropout Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regularization layer that applies Dropout to the input",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Dropout" ]
        },
        "comments" : [ "Applies Dropout to the input. The Dropout layer randomly sets input units to 0 with a frequency of rate at each step during training time, which helps prevent overfitting. Inputs not set to 0 are scaled up by 1/(1 - rate) such that the sum over all inputs is unchanged. Note that the Dropout layer only applies when training is set to True such that no values are dropped during inference. When using model.fit, training will be appropriately set to True automatically, and in other contexts, you can set the kwarg explicitly to True when calling the layer. (This is in contrast to setting trainable=False for a Dropout layer. trainable does not affect the layer's behavior, as Dropout does not have any variables/weights that can be frozen during training.)" ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/DunningKrugerEffectBias",
      "lbl" : "Dunning-Kruger Effect Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A cognitive bias in which people with low ability in an area overestimate that ability. Often measured by comparing self-assessment with objective performance.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Dunning-Kruger Effect"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/DynamicConditionalCorrelation",
      "lbl" : "Dynamic Conditional Correlation",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model that allows for time-varying correlations between different time series, used in financial econometrics to model and forecast covariances."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "DCC"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ELUFunction",
      "lbl" : "ELU Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that is x if x > 0 and alpha * (exp(x) - 1) if x < 0 where alpha controls the value to which an ELU saturates for negative net inputs.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/elu" ]
        },
        "comments" : [ "The exponential linear unit (ELU) with alpha > 0 is: x if x > 0 and alpha * (exp(x) - 1) if x < 0 The ELU hyperparameter alpha controls the value to which an ELU saturates for negative net inputs. ELUs diminish the vanishing gradient effect. ELUs have negative values which pushes the mean of the activations closer to zero. Mean activations that are closer to zero enable faster Learning as they bring the gradient closer to the natural gradient. ELUs saturate to a negative value when the argument gets smaller. Saturation means a small derivative which decreases the variation and the information that is propagated to the next layer." ],
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ELU"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Exponential Linear Unit"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ELULayer",
      "lbl" : "ELU Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An activation layer that applies the Exponential Linear Unit (ELU) function element-wise.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ELU" ]
        },
        "comments" : [ "Exponential Linear Unit." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/EchoStateNetwork",
      "lbl" : "Echo State Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A recurrent neural network with a recurrent hidden layer and sparsely connected hidden neurons that learns output weights to produce temporal patterns.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Echo_state_network" ]
        },
        "comments" : [ "Layers: Input, Recurrent, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ESN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/EcologicalFallacyBias",
      "lbl" : "Ecological Fallacy Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias occurring when an inference about an individual is made based on their group membership.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Ecological Fallacy"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/EmbeddingLayer",
      "lbl" : "Embedding Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that turns positive integers (indexes) into dense vectors of fixed size.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Embedding" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/EmbodiedLLM",
      "lbl" : "Embodied LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that integrates language with other modalities like vision audio and robotics to enable grounded language understanding in real-world environments."
        },
        "comments" : [ "An embodied LLM integrates language with other modalities like vision, audio, and robotics to enable grounded language understanding in real-world environments." ],
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Embodied Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "multimodal grounding"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/EmergentBias",
      "lbl" : "Emergent Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A use and interpretation bias resulting from the use and reliance on algorithms across new or unanticipated contexts.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/EncoderDecoderLLM",
      "lbl" : "Encoder-Decoder LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model introduced in the \"Attention Is All You Need\" paper. The encoder processes the input sequence to generate a hidden representation summarizing the input information, while the decoder uses this hidden representation to generate the desired output sequence.",
          "xrefs" : [ "https://www.practicalai.io/understanding-transformer-model-architectures/#:~:text=Encoder" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/EncoderLLM",
      "lbl" : "Encoder LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that uses an encoder-only architecture to encode the input sequence into a fixed-length representation which is then used as input to a classifier or regressor for prediction.",
          "xrefs" : [ "https://www.practicalai.io/understanding-transformer-model-architectures/#:~:text=Encoder" ]
        },
        "comments" : [ "An encoder-only architecture that encodes the input sequence into a fixed-length representation, which is then used as input to a classifier or regressor for prediction. The model has a pre-trained general-purpose encoder that requires fine-tuning for specific tasks." ],
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/EnergyBasedLLM",
      "lbl" : "Energy-Based LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which models the explicit probability density over token sequences using an energy function, rather than an autoregressive factorization. This can improve modeling of long-range dependencies and global coherence."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Energy-Based Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "energy scoring"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "explicit density modeling"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/EnsembleLearning",
      "lbl" : "Ensemble Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods that use multiple learning algorithms to achieve better predictive performance than any of the constituent algorithms alone.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Ensemble_learning" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ErrorPropagationBias",
      "lbl" : "Error Propagation Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A processing bias characterized by the effect of variables' uncertainties (or errors more specifically random errors) on the uncertainty of a function based on them.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Error Propagation"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/EthicalLLM",
      "lbl" : "Ethical LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is trained to uphold certain ethical principles values or rules in its language generation to increase safety and trustworthiness."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Ethical Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "constituitional AI"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "value alignment"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/EvaluationBias",
      "lbl" : "Evaluation Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias arising when testing populations do not equally represent user populations or when inappropriate performance metrics are used.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/EvolutionaryLLM",
      "lbl" : "Evolutionary LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that applies principles of evolutionary computation to optimize its structure and parameters evolving over time to improve performance."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Evolutionary Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "evolutionary algorithms"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "genetic programming"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ExclusionBias",
      "lbl" : "Exclusion Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias occurring when specific groups of user populations are excluded from testing and analysis.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ExplainableLLM",
      "lbl" : "Explainable LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is designed to provide insights into its decision-making process making it easier for users to understand and trust the model's outputs by incorporating mechanisms for interpreting and explaining its predictions in human-understandable terms."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Explainable Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "XAI LLM"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "interpretability"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "model understanding"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ExponentialFunction",
      "lbl" : "Exponential Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function denoted by f(x)=exp or e^{x}.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/exponential" ]
        },
        "comments" : [ "The exponential function is a mathematical function denoted by f(x)=exp or e^{x}." ],
        "subsets" : [ "https://w3id.org/aio/FunctionSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ExponentialSmoothingStateSpaceModel",
      "lbl" : "Exponential Smoothing State Space Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model that combines exponential smoothing with state space modeling, allowing for the inclusion of both trend and seasonal components. Used in  forecasting."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ETS"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ExtremeLearningMachine",
      "lbl" : "Extreme Learning Machine",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A feedback network with randomly assigned hidden nodes that are not updated during training.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Extreme_Learning_machine" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ELM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/FactoredLanguageModel",
      "lbl" : "Factored Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that views each word as a vector of multiple factors such as part-of-speech morphology and semantics to improve language modeling.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Factored_language_model" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Factorized Language Model"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/FactorizedLLM",
      "lbl" : "Factorized LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that decomposes the full language modeling task into multiple sub-components or experts that each focus on a subset of the information enabling more efficient scaling.",
          "xrefs" : [ "https://doi.org/10.48550/arXiv.2403.12556" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Factorized Large Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Factorized Learning Assisted with Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Conditional masking"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Product of experts"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/FeatureExtraction",
      "lbl" : "Feature Extraction",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A data enhancement that transforms raw data into a set of measurable characteristics that can be used as input for machine learning algorithms, enhancing the ability to make accurate predictions."
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Attribute Extraction"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Feature Isolation"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Semantic embeddings"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Syntactic information"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/FederatedLLM",
      "lbl" : "Federated LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is trained in a decentralized manner across multiple devices or silos without directly sharing private data enabling collaborative training while preserving data privacy and security."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Federated Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "decentralized training"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "privacy-preserving"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/FederatedLearning",
      "lbl" : "Federated Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network trained across decentralized edge devices or servers holding local data samples without exchanging them.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Federated_learning" ]
        },
        "comments" : [ "Training an algorithm across multiple decentralized edge devices or servers holding local data samples without exchanging them." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/FeedbackLoopBias",
      "lbl" : "Feedback Loop Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A use and interpretation bias occurring when an algorithm learns from user behavior and feeds that behavior back into the model.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/FeedbackNetwork",
      "lbl" : "Feedback Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An artificial neural network that refines its representations iteratively based on feedback from previous outputs."
        },
        "comments" : [ "Layers: Input, Hidden, Output, Hidden" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "FBN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/FixedEffectsModel",
      "lbl" : "Fixed Effects Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis in which the model parameters are fixed or non-random quantities.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Fixed_effects_model" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "FEM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/FlattenLayer",
      "lbl" : "Flatten Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A reshaping layer that flattens the input",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Flatten" ]
        },
        "comments" : [ "Flattens the input. Does not affect the batch size." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/FractionalMaxPool2DLayer",
      "lbl" : "FractionalMaxPool2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 2D fractional max pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "FractionalMaxPool2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/FractionalMaxPool3DLayer",
      "lbl" : "FractionalMaxPool3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies a 3D fractional max pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "FractionalMaxPool3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/FundingBias",
      "lbl" : "Funding Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A group bias arising when biased results are reported to support or satisfy the funding agency or financial supporter of a research study.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/GELUFunction",
      "lbl" : "GELU Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that computes x * P(X <= x) where P(X) ~ N(0 1) weighting inputs by their value rather than gating inputs by their sign as in ReLU.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/gelu" ]
        },
        "comments" : [ "Gaussian error linear unit (GELU) computes x * P(X <= x), where P(X) ~ N(0, 1). The (GELU) nonlinearity weights inputs by their value, rather than gates inputs by their sign as in ReLU." ],
        "subsets" : [ "https://w3id.org/aio/FunctionSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GELU"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Gaussian Error Linear Unit"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GRUCellLayer",
      "lbl" : "GRUCell Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that processes one step within the whole time sequence input for a GRU layer.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GRUCell" ]
        },
        "comments" : [ "Cell class for the GRU layer. This class processes one step within the whole time sequence input, whereas tf.keras.layer.GRU processes the whole sequence." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/GRULayer",
      "lbl" : "GRU Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A recurrent layer that implements the Gated Recurrent Unit architecture.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GRU" ]
        },
        "comments" : [ "Gated Recurrent Unit - Cho et al. 2014. Based on available runtime hardware and constraints, this layer will choose different implementations (cuDNN-based or pure-TensorFlow) to maximize the performance. If a GPU is available and all the arguments to the layer meet the requirement of the cuDNN kernel (see below for details), the layer will use a fast cuDNN implementation. The requirements to use the cuDNN implementation are: activation == tanh, recurrent_activation == sigmoid, recurrent_dropout == 0, unroll is False, use_bias is True, reset_after is True. Inputs, if use masking, are strictly right-padded. Eager execution is enabled in the outermost context. There are two variants of the GRU implementation. The default one is based on v3 and has reset gate applied to hidden state before matrix multiplication. The other one is based on original and has the order reversed. The second variant is compatible with CuDNNGRU (GPU-only) and allows inference on CPU. Thus it has separate biases for kernel and recurrent_kernel. To use this variant, set reset_after=True and recurrent_activation='sigmoid'." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/GatedRecurrentUnit",
      "lbl" : "Gated Recurrent Unit",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A long short-term memory network that is a gating mechanism in recurrent neural networks similar to LSTMs but with fewer parameters and no output gate.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Gated_recurrent_unit" ]
        },
        "comments" : [ "Layers: Input, Memory Cell, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GRU"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GaussianDropoutLayer",
      "lbl" : "GaussianDropout Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regularization layer that applies multiplicative 1-centered Gaussian noise.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GaussianDropout" ]
        },
        "comments" : [ "Apply multiplicative 1-centered Gaussian noise. As it is a regularization layer, it is only active at training time." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/GaussianNoiseLayer",
      "lbl" : "GaussianNoise Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regularization layer that applies additive zero-centered Gaussian noise.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GaussianNoise" ]
        },
        "comments" : [ "Apply additive zero-centered Gaussian noise. This is useful to mitigate overfitting (you could see it as a form of random data augmentation). Gaussian Noise (GS) is a natural choice as corruption process for real valued inputs. As it is a regularization layer, it is only active at training time." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/GeneralizedAutoregressiveConditionalHeteroskedasticity",
      "lbl" : "Generalized Autoregressive Conditional Heteroskedasticity",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model that incorporates lagged conditional variances, allowing for more flexibility in modeling time-varying volatility."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GARCH"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GeneralizedFewshotLearning",
      "lbl" : "Generalized Few-shot Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that learns novel classes from few samples per class, preventing catastrophic forgetting of base classes and ensuring classifier calibration.",
          "xrefs" : [ "https://paperswithcode.com/paper/generalized-and-incremental-few-shot-learning/review/" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GFSL"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GeneralizedLinearModel",
      "lbl" : "Generalized Linear Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis that relates the linear model to the response variable via a link function and allowing the variance of each measurement to be a function of its predicted value.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Generalized_linear_model" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GLM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GenerativeAdversarialNetwork",
      "lbl" : "Generative Adversarial Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An unsupervised pretrained network framework where two neural networks contest in a game to generate new data with the same statistics as the training set.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Generative_adversarial_network" ]
        },
        "comments" : [ "Layers: Backfed Input, Hidden, Matched Output-Input, Hidden, Matched Output-Input" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GAN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GenerativeAdversarialNetworkAugmentedLLM",
      "lbl" : "Generative Adversarial Network-Augmented LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which incorporates a generative adversarial network (GAN) into its training process, using a discriminator network to provide a signal for generating more realistic and coherent text. This adversarial training can improve the quality and diversity of generated text."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GAN-Large Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Generative Adversarial Network-Augmented Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "adversarial training"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "text generation"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GenerativeCommonsenseLLM",
      "lbl" : "Generative Commonsense LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is trained to understand and model basic physics causality and common sense about how the real world works.",
          "xrefs" : [ "https://arxiv.org/abs/2306.12672" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Generative Commonsense Large Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "World Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "causal modeling"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "physical reasoning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GenerativeLanguageInterface",
      "lbl" : "Generative Language Interface",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that enables users to engage in an interactive dialogue with an LLM providing feedback to guide and refine the generated outputs iteratively."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "Interactive generation"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GlobalAveragePooling1DLayer",
      "lbl" : "GlobalAveragePooling1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs global average pooling operation for temporal data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GlobalAveragePooling1D" ]
        },
        "comments" : [ "Global average pooling operation for temporal data." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GlobalAvgPool1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GlobalAveragePooling2DLayer",
      "lbl" : "GlobalAveragePooling2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs global average pooling operation for spatial data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GlobalAveragePooling2D" ]
        },
        "comments" : [ "Global average pooling operation for spatial data." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GlobalAvgPool2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GlobalAveragePooling3DLayer",
      "lbl" : "GlobalAveragePooling3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs global average pooling operation for 3D data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GlobalAveragePooling3D" ]
        },
        "comments" : [ "Global Average pooling operation for 3D data." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GlobalAvgPool3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GlobalMaxPooling1DLayer",
      "lbl" : "GlobalMaxPooling1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs global max pooling operation for temporal data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GlobalMaxPool1D" ]
        },
        "comments" : [ "Global max pooling operation for 1D temporal data." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GlobalMaxPool1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GlobalMaxPooling2DLayer",
      "lbl" : "GlobalMaxPooling2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs global max pooling operation for spatial data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GlobalMaxPool2D" ]
        },
        "comments" : [ "Global max pooling operation for spatial data." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GlobalMaxPool2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GlobalMaxPooling3DLayer",
      "lbl" : "GlobalMaxPooling3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs global max pooling operation for 3D data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/GlobalMaxPool3D" ]
        },
        "comments" : [ "Global Max pooling operation for 3D data." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GlobalMaxPool3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GraphConvolutionalNetwork",
      "lbl" : "Graph Convolutional Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that operates directly on graph structures utilizing structural information.",
          "xrefs" : [ "https://arxiv.org/abs/1609.02907" ]
        },
        "comments" : [ "Layers: Input, Hidden, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GCN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GraphConvolutionalPolicyNetwork",
      "lbl" : "Graph Convolutional Policy Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A graph convolutional network that generates goal-directed graphs using reinforcement learning and optimizing for rewards and adversarial loss.",
          "xrefs" : [ "https://arxiv.org/abs/1806.02473" ]
        },
        "comments" : [ "Layers: Input, Hidden, Hidden, Policy, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GPCN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GraphLanguageModel",
      "lbl" : "Graph Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that operates over structured inputs or outputs represented as graphs enabling reasoning over explicit relational knowledge representations during language tasks.",
          "xrefs" : [ "https://arxiv.org/abs/2401.07105" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Graph LM"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Structured representations"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GroupBias",
      "lbl" : "Group Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A systemic bias characterized by favoring members of one's in-group over out-group members expressed in evaluation resource allocation and other ways.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/In-group_favoritism" ]
        },
        "comments" : [ "Favoring members of one's in-group over out-group members, expressed in evaluation, resource allocation, and other ways." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "In-group Favoritism"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "In-group bias"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "In-group preference"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "In-group–out-group Bias"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Intergroup bias"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GroupNormLayer",
      "lbl" : "GroupNorm Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that applies Group Normalization over a mini-batch of inputs.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies Group Normalization over a mini-batch of inputs as described in the paper Group Normalization" ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "GroupNorm"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/GroupthinkBias",
      "lbl" : "Groupthink Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A group bias in which people in a group make non-optimal decisions due to a desire to conform or fear of dissent.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Groupthink"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/HardSigmoidFunction",
      "lbl" : "Hard Sigmoid Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that is a faster approximation of the sigmoid activation using a piecewise linear approximation.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/hard_sigmoid" ]
        },
        "comments" : [ "A faster approximation of the sigmoid activation. Piecewise linear approximation of the sigmoid function. Ref: 'https://en.wikipedia.org/wiki/Hard_sigmoid'" ],
        "subsets" : [ "https://w3id.org/aio/FunctionSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/HashingLayer",
      "lbl" : "Hashing Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A categorical features preprocessing layer which hashes and bins categorical features.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Hashing" ]
        },
        "comments" : [ "A preprocessing layer which hashes and bins categorical features. This layer transforms categorical inputs to hashed output. It element-wise converts a ints or strings to ints in a fixed range. The stable hash function uses tensorflow::ops::Fingerprint to produce the same output consistently across all platforms. This layer uses FarmHash64 by default, which provides a consistent hashed output across different platforms and is stable across invocations, regardless of device and context, by mixing the input bits thoroughly. If you want to obfuscate the hashed output, you can also pass a random salt argument in the constructor. In that case, the layer will use the SipHash64 hash function, with the salt value serving as additional input to the hash function." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/HiddenLayer",
      "lbl" : "Hidden Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer located between the input and output that performs nonlinear transformations of the inputs entered into the network.",
          "xrefs" : [ "https://deepai.org/machine-Learning-glossary-and-terms/hidden-layer-machine-Learning" ]
        },
        "comments" : [ "A hidden layer is located between the input and output of the algorithm, in which the function applies weights to the inputs and directs them through an activation function as the output. In short, the hidden layers perform nonlinear transformations of the inputs entered into the network. Hidden layers vary depending on the function of the neural network, and similarly, the layers may vary depending on their associated weights." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/HierarchicalClassification",
      "lbl" : "Hierarchical Classification",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A classification focused on methods that group things according to a hierarchy.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Hierarchical_classification" ]
        },
        "comments" : [ "Methods that group things according to a hierarchy." ],
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/HierarchicalClustering",
      "lbl" : "Hierarchical Clustering",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A clustering that builds a hierarchy of clusters.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Hierarchical_clustering" ]
        },
        "comments" : [ "Methods that build a hierarchy of clusters." ],
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "HCL"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/HierarchicalLanguageModel",
      "lbl" : "Hierarchical Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that represents language at multiple levels of granularity learning hierarchical representations that capture both low-level patterns and high-level abstractions.",
          "xrefs" : [ "https://doi.org/10.1016/j.ipm.2024.103698" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Hierarchical LM"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "multi-scale representations"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/HistoricalBias",
      "lbl" : "Historical Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A bias characterized by long-standing biases encoded in society over time distinct from biases in historical description or interpretation.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Long-standing biases encoded in society over time, distinct from biases in historical description or the interpretation of history, such as viewing the larger world from a Western or European perspective." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/HopfieldNetwork",
      "lbl" : "Hopfield Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A symmetrically connected network that is a type of recurrent artificial neural network serving as a content-addressable memory system.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Hopfield_network" ]
        },
        "comments" : [ "Layers: Backfed input" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "HN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Ising model of a neural network"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Ising–Lenz–Little model"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/HostileAttributionBias",
      "lbl" : "Hostile Attribution Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A use and interpretation bias where individuals perceive benign or ambiguous behaviors as hostile.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Interpretive_bias" ]
        },
        "comments" : [ "Bias where individuals perceive benign or ambiguous behaviors as hostile." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/HumanBias",
      "lbl" : "Human Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A bias in human thought based on heuristic principles leading to simplified judgmental operations.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/HumanReportingBias",
      "lbl" : "Human Reporting Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias that arises when users depend on automated systems as heuristic substitutes for their own information-seeking and processing efforts.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ImageAugmentationLayer",
      "lbl" : "Image Augmentation Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that performs image data preprocessing augmentations.",
          "xrefs" : [ "https://keras.io/guides/preprocessing_layers/" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ImagePreprocessingLayer",
      "lbl" : "Image Preprocessing Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that performs image data preprocessing operations.",
          "xrefs" : [ "https://keras.io/guides/preprocessing_layers/" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ImplicitBias",
      "lbl" : "Implicit Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias characterized by unconscious beliefs attitudes feelings associations or stereotypes that affect information processing decision-making and actions.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Unconscious beliefs, attitudes, feelings, associations, or stereotypes that affect information processing, decision-making, and actions." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Confirmatory Bias"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ImplicitLanguageModel",
      "lbl" : "Implicit Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that uses an energy function to score entire sequences instead of factorizing probabilities autoregressively better capturing global properties and long-range dependencies.",
          "xrefs" : [ "https://arxiv.org/pdf/2303.16189" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Implicit LM"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Energy-based models"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Token-level scoring"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/IncremenetalFewshotLearning",
      "lbl" : "Incremenetal Few-shot Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network trained on a base set of classes and then presented with novel classes, each with few labeled examples.",
          "xrefs" : [ "https://arxiv.org/abs/1810.07218" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "IFSL"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/IndividualBias",
      "lbl" : "Individual Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A bias characterized by a persistent point of view or limited list of such points of view, applied by an individual.",
          "xrefs" : [ "https://develop.consumerium.org/wiki/Individual_bias" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/InheritedBias",
      "lbl" : "Inherited Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A processing bias arising when machine learning applications generate inputs for other machine learning algorithms passing on any existing bias.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/InputLayer",
      "lbl" : "Input Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer composed of artificial input neurons that brings the initial data into the system for further processing by subsequent layers.",
          "xrefs" : [ "https://www.techopedia.com/definition/33262/input-layer-neural-networks" ]
        },
        "comments" : [ "The input layer of a neural network is composed of artificial input neurons, and brings the initial data into the system for further processing by subsequent layers of artificial neurons. The input layer is the very beginning of the workflow for the artificial neural network." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/InputLayerLayer",
      "lbl" : "InputLayer Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer to be used as an entry point into a Network (a graph of layers).",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/InputLayer" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/InputSpecLayer",
      "lbl" : "InputSpec Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that specifies the rank",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/InputSpec" ]
        },
        "comments" : [ "Specifies the rank, dtype and shape of every input to a layer. Layers can expose (if appropriate) an input_spec attribute: an instance of InputSpec, or a nested structure of InputSpec instances (one per input tensor). These objects enable the layer to run input compatibility checks for input structure, input rank, input shape, and input dtype. A None entry in a shape is compatible with any dimension, a None shape is compatible with any shape." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/InstanceNorm1DLayer",
      "lbl" : "InstanceNorm1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that applies Instance Normalization over a 2D (unbatched) or 3D (batched) input.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies Instance Normalization over a 2D (unbatched) or 3D (batched) input as described in the paper Instance Normalization: The Missing Ingredient for Fast Stylization." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "InstanceNorm1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/InstanceNorm2D",
      "lbl" : "InstanceNorm2D",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that applies Instance Normalization over a 4D input (a mini-batch of 2D inputs with additional channel dimension).",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies Instance Normalization over a 4D input (a mini-batch of 2D inputs with additional channel dimension) as described in the paper Instance Normalization: The Missing Ingredient for Fast Stylization." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/InstanceNorm3DLayer",
      "lbl" : "InstanceNorm3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that applies Instance Normalization over a 5D input (a mini-batch of 3D inputs with additional channel dimension).",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies Instance Normalization over a 5D input (a mini-batch of 3D inputs with additional channel dimension) as described in the paper Instance Normalization: The Missing Ingredient for Fast Stylization." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "InstanceNorm3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/InstitutionalBias",
      "lbl" : "Institutional Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A systemic bias exhibited at the level of entire institutions where practices or norms result in the favoring or disadvantaging of certain social groups.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Bias exhibited at the level of entire institutions, where practices or norms result in the favoring or disadvantaging of certain social groups, such as institutional racism or sexism." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/InstructionTunedLLM",
      "lbl" : "Instruction-Tuned LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which is fine-tuned to follow natural language instructions accurately and safely, learning to map from instructions to desired model behavior in a more controlled and principled way."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Instruction-Tuned Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "constitutional AI"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "natural language instructions"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/IntegerLookupLayer",
      "lbl" : "IntegerLookup Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A categorical features preprocessing layer that maps integer features to contiguous ranges.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/IntegerLookup" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/InterpretationBias",
      "lbl" : "Interpretation Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias where users interpret algorithmic outputs according to their internalized biases and views.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/KernelLayer",
      "lbl" : "Kernel Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that obtains the dot product of input values or subsets of input values."
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/KnearestNeighborAlgorithm",
      "lbl" : "K-nearest Neighbor Algorithm",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task that groups objects by a plurality vote of its neighbors, assigning each object to the class most common among its k nearest neighbors.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "K-NN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "KNN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/KnearestNeighborClassificationAlgorithm",
      "lbl" : "K-nearest Neighbor Classification Algorithm",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A classification and clustering that classifies objects by a plurality vote of its neighbors, assigning each object to the class most common among its k nearest neighbors.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "K-NN Classification"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "KNN Classification"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/KnearestNeighborRegressionAlgorithm",
      "lbl" : "K-nearest Neighbor Regression Algorithm",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An regression analysis that assigns the average of the values of k nearest neighbors to objects.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "K-NN Regression"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "KNN Regression"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/KnowledgeGroundedLLM",
      "lbl" : "Knowledge-Grounded LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which incorporates external knowledge sources or knowledge bases into the model architecture, enabling it to generate more factually accurate and knowledge-aware text."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Knowledge-Grounded Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "factual grounding"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "knowledge integration"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/KnowledgeTransfer",
      "lbl" : "Knowledge Transfer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A training strategy in which knowledge is passed from one entity such as a person organization or system to another facilitating learning and adaptation in the receiving entity through various methods such as teaching training or data exchange.",
          "xrefs" : [ "https://doi.org/10.1016/j.knosys.2015.01.010" ]
        },
        "subsets" : [ "https://w3id.org/aio/TrainingStrategySubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Inductive Transfer"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Adaptation"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Pretrained models"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/KohonenNetwork",
      "lbl" : "Kohonen Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A network that is an unsupervised technique producing a low-dimensional representation of high-dimensional data preserving topological structure.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Self-organizing_map" ]
        },
        "comments" : [ "Layers: Input, Hidden" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "KN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "SOFM"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "SOM"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Self-Organizing Feature Map"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Self-Organizing Map"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LPPool1DLayer",
      "lbl" : "LPPool1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies 1D power-average pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LPPool1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LPPool2DLayer",
      "lbl" : "LPPool2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that applies 2D power-average pooling over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LPPool2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LSTMCellLayer",
      "lbl" : "LSTMCell Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that processes one step within the whole time sequence input for an LSTM layer.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/LSTMCell" ]
        },
        "comments" : [ "Cell class for the LSTM layer." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LSTMLayer",
      "lbl" : "LSTM Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A recurrent layer that implements the Long Short-Term Memory architecture.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/LSTM" ]
        },
        "comments" : [ "Long Short-Term Memory layer - Hochreiter 1997. Based on available runtime hardware and constraints, this layer will choose different implementations (cuDNN-based or pure-TensorFlow) to maximize the performance. If a GPU is available and all the arguments to the layer meet the requirement of the cuDNN kernel (see below for details), the layer will use a fast cuDNN implementation. The requirements to use the cuDNN implementation are: 1. activation == tanh, 2. recurrent_activation == sigmoid, 3. recurrent_dropout == 0, 4. unroll is False, 5. use_bias is True, 6. Inputs, if use masking, are strictly right-padded, 7. Eager execution is enabled in the outermost context." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LambdaLayer",
      "lbl" : "Lambda Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that wraps arbitrary expressions as a Layer object.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Lambda" ]
        },
        "comments" : [ "Wraps arbitrary expressions as a Layer object." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LanguageInterfaceLLM",
      "lbl" : "Language Interface LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that supports interactive semantic parsing enabling users to provide feedback and corrections to dynamically refine and update the language model."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "Interactive learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LanguageModel",
      "lbl" : "Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model designed to predict the next word in a sequence or assign probabilities to sequences of words in natural language.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Language_model" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LargeLanguageModel",
      "lbl" : "Large Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model consisting of a neural network with many parameters (typically billions of weights or more) trained on large quantities of unlabeled text using self-supervised learning or semi-supervised learning.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Large_language_model" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LLM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LassoRegression",
      "lbl" : "Lasso Regression",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis that performs both variable selection and regularization to enhance prediction accuracy and interpretability.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Lasso_(statistics)" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Layer",
      "lbl" : "Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A structure or network topology in a deep learning model that takes information from previous layers and passes it to the next layer.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Layer_(deep_learning)" ]
        },
        "subsets" : [ "https://w3id.org/aio/ClassSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LayerLayer",
      "lbl" : "Layer Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that form which other layers can inherit.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer" ]
        },
        "comments" : [ "This is the class from which all layers inherit. A layer is a callable object that takes as input one or more tensors and that outputs one or more tensors. It involves computation, defined in the call() method, and a state (weight variables). State can be created in various places, at the convenience of the subclass implementer: in __init__(); in the optional build() method, which is invoked by the first __call__() to the layer, and supplies the shape(s) of the input(s), which may not have been known at initialization time; in the first invocation of call(), with some caveats discussed below. Users will just instantiate a layer and then treat it as a callable." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LayerNormLayer",
      "lbl" : "LayerNorm Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that applies Layer Normalization over a mini-batch of inputs.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies Layer Normalization over a mini-batch of inputs as described in the paper Layer Normalization" ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LayerNorm"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LayerNormalizationLayer",
      "lbl" : "LayerNormalization Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that applies Layer Normalization over the inputs.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/LayerNormalization" ]
        },
        "comments" : [ "Layer normalization layer (Ba et al., 2016). Normalize the activations of the previous layer for each given example in a batch independently, rather than across a batch like Batch Normalization. i.e. applies a transformation that maintains the mean activation within each example close to 0 and the activation standard deviation close to 1. Given a tensor inputs, moments are calculated and normalization is performed across the axes specified in axis." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LazyBatchNorm1DLayer",
      "lbl" : "LazyBatchNorm1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A batch normalization layer that lazily initializes the num_features argument from the input size for 1D data.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "A torch.nn.BatchNorm1D module with lazy initialization of the num_features argument of the BatchNorm1D that is inferred from the input.size(1)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LazyBatchNorm1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LazyBatchNorm2DLayer",
      "lbl" : "LazyBatchNorm2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A batch normalization layer that lazily initializes the num_features argument from the input size for 2D data.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "A torch.nn.BatchNorm2D module with lazy initialization of the num_features argument of the BatchNorm2D that is inferred from the input.size(1)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LazyBatchNorm2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LazyBatchNorm3DLayer",
      "lbl" : "LazyBatchNorm3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A batch normalization layer that lazily initializes the num_features argument from the input size for 3D data.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "A torch.nn.BatchNorm3D module with lazy initialization of the num_features argument of the BatchNorm3D that is inferred from the input.size(1)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LazyBatchNorm3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LazyInstanceNorm1DLayer",
      "lbl" : "LazyInstanceNorm1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that lazily initializes the num_features argument from the input size for 1D data.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "A torch.nn.InstanceNorm1D module with lazy initialization of the num_features argument of the InstanceNorm1D that is inferred from the input.size(1)." ],
        "subsets" : [ "https://w3id.org/aio/InstanceNormalizationLayerSubset", "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LazyInstanceNorm1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LazyInstanceNorm2DLayer",
      "lbl" : "LazyInstanceNorm2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that lazily initializes the num_features argument from the input size for 2D data.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "A torch.nn.InstanceNorm2D module with lazy initialization of the num_features argument of the InstanceNorm2D that is inferred from the input.size(1)." ],
        "subsets" : [ "https://w3id.org/aio/InstanceNormalizationLayerSubset", "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LazyInstanceNorm2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LazyInstanceNorm3DLayer",
      "lbl" : "LazyInstanceNorm3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization that lazily initializes the num_features argument from the input size for 3D data.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "A torch.nn.InstanceNorm3D module with lazy initialization of the num_features argument of the InstanceNorm3D that is inferred from the input.size(1)." ],
        "subsets" : [ "https://w3id.org/aio/InstanceNormalizationLayerSubset", "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LazyInstanceNorm3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LeakyReLULayer",
      "lbl" : "LeakyReLU Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An activation layer that applies the leaky rectified linear unit function element-wise.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/LeakyReLU" ]
        },
        "comments" : [ "Leaky version of a Rectified Linear Unit." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LeastsquaresAnalysis",
      "lbl" : "Least-squares Analysis",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis which approximates the solution of overdetermined systems by minimizing the sum of the squares of the residuals.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Least_squares" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LifelongLearningLLM",
      "lbl" : "Lifelong Learning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that continually acquires new knowledge over time without forgetting previously learned information maintaining a balance between plasticity and stability."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Continual Learning LLM"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Forever Learning"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Catastrophic forgetting"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Plasticity-Stability balance"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LinearFunction",
      "lbl" : "Linear Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that has the form f(x) = a + bx.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/linear" ]
        },
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LinearRegression",
      "lbl" : "Linear Regression",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis that is a linear approach for modeling the relationship between a scalar response and one or more explanatory variables.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Linear_regression" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LinkingBias",
      "lbl" : "Linking Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A use and interpretation bias arising when network attributes obtained from user connections activities or interactions misrepresent true user behavior.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Bias arising when network attributes obtained from user connections, activities, or interactions misrepresent true user behavior." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LiquidStateMachineNetwork",
      "lbl" : "Liquid State Machine Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A network that is a type of reservoir computer turning time-varying input into spatio-temporal activation patterns.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Liquid_state_machine" ]
        },
        "comments" : [ "Layers: Input, Spiking Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LSM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LocalResponseNormLayer",
      "lbl" : "LocalResponseNorm Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A normalization layer that applies local response normalization over an input signal composed of several input planes.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies local response normalization over an input signal composed of several input planes, where channels occupy the second dimension." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LocalResponseNorm"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LocallyConnected1DLayer",
      "lbl" : "LocallyConnected1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A locally-connected layer for 1D inputs where each patch of the input is convolved with a different set of filters.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/LocallyConnected1D" ]
        },
        "comments" : [ "Locally-connected layer for 1D inputs. The LocallyConnected1D layer works similarly to the Conv1D layer, except that weights are unshared, that is, a different set of filters is applied at each different patch of the input." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LocallyConnected2DLayer",
      "lbl" : "LocallyConnected2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A locally-connected layer for 2D inputs where each patch of the input is convolved with a different set of filters.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/LocallyConnected2D" ]
        },
        "comments" : [ "Locally-connected layer for 2D inputs. The LocallyConnected2D layer works similarly to the Conv2D layer, except that weights are unshared, that is, a different set of filters is applied at each different patch of the input." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LocallyconnectedLayer",
      "lbl" : "Locally-connected Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that works similarly to the Convolution1D layer, except that weights are unshared, that is, a different set of filters is applied at each different patch of the input.",
          "xrefs" : [ "https://faroit.com/keras-docs/1.2.2/layers/local/" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LogisticRegression",
      "lbl" : "Logistic Regression",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis that estimates the probability of an event occurring by modeling the log-odds of the event as a linear combination of one or more independent variables.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Logistic_regression" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LongShortTermMemory",
      "lbl" : "Long Short Term Memory",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A recurrent neural network with feedback connections that processes entire sequences of data.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Long_short-term_memory" ]
        },
        "comments" : [ "Layers: Input, Memory Cell, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "LSTM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/LossOfSituationalAwarenessBias",
      "lbl" : "Loss Of Situational Awareness Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias occurring when automation leads to humans being unaware of their situation making them unprepared to assume control in cooperative systems.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LowResourceLLM",
      "lbl" : "Low-Resource LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which is optimized for performance in scenarios with limited data, computational resources, or for languages with sparse datasets."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Low-Resource Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "low-resource languages"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "resource-efficient"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MachineLearningTask",
      "lbl" : "Machine Learning Task",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A process intended to build methods that learn from data.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "Machine Learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ManifoldLearning",
      "lbl" : "Manifold Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A dimensionality reduction method based on the assumption that observed data lie on a low-dimensional manifold embedded in a higher-dimensional space.",
          "xrefs" : [ "https://arxiv.org/abs/2011.01307" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MarkovChain",
      "lbl" : "Markov Chain",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A network that is a stochastic model describing a sequence of possible events where the probability of each event depends only on the previous event's state.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Markov_chain" ]
        },
        "comments" : [ "Layers: Probalistic Hidden" ],
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "MC"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "MP"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Markov Process"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MaskedLanguageModel",
      "lbl" : "Masked Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that is trained to predict randomly masked tokens in a sequence based on the remaining unmasked tokens allowing it to build deep bidirectional representations that can be effectively transferred to various NLP tasks via fine-tuning."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "bidirectional encoder"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "denoising autoencoder"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MaskingLayer",
      "lbl" : "Masking Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that masks a sequence by using a mask value to skip timesteps.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Masking" ]
        },
        "comments" : [ "Masks a sequence by using a mask value to skip timesteps. For each timestep in the input tensor (dimension #1 in the tensor), if all values in the input tensor at that timestep are equal to mask_value, then the timestep will be masked (skipped) in all downstream layers (as long as they support masking). If any downstream layer does not support masking yet receives such an input mask, an exception will be raised." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MatchedInputOutputLayer",
      "lbl" : "Matched Input-Output Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An input layer with a shape corresponding to that of the output layer."
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MathematicalFunction",
      "lbl" : "Mathematical Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical rule that gives the value of a dependent variable corresponding to specified values of one or more independent variables.",
          "xrefs" : [ "https://www.sciencedirect.com/topics/mathematics/mathematical-function" ]
        },
        "subsets" : [ "https://w3id.org/aio/ClassSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MaxPooling1DLayer",
      "lbl" : "MaxPooling1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs max pooling operation for temporal data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPool1D" ]
        },
        "comments" : [ "Max pooling operation for 1D temporal data. Downsamples the input representation by taking the maximum value over a spatial window of size pool_size. The window is shifted by strides. The resulting output, when using the \"valid\" padding option, has a shape of: output_shape = (input_shape - pool_size + 1) / strides) The resulting output shape when using the \"same\" padding option is: output_shape = input_shape / strides." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "MaxPool1D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "MaxPooling1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MaxPooling2DLayer",
      "lbl" : "MaxPooling2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs max pooling operation for spatial data.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPool2D" ]
        },
        "comments" : [ "Max pooling operation for 2D spatial data." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "MaxPool2D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "MaxPooling2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MaxPooling3DLayer",
      "lbl" : "MaxPooling3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that performs max pooling operation for 3D data (spatial or spatio-temporal).",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPool3D" ]
        },
        "comments" : [ "Max pooling operation for 3D data (spatial or spatio-temporal). Downsamples the input along its spatial dimensions (depth, height, and width) by taking the maximum value over an input window (of size defined by pool_size) for each channel of the input. The window is shifted by strides along each dimension." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "MaxPool3D"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "MaxPooling3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MaxUnpool1DLayer",
      "lbl" : "MaxUnpool1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that computes a partial inverse of MaxPool1D.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "comments" : [ "Computes a partial inverse of MaxPool1D." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "MaxUnpool1D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MaxUnpool2DLayer",
      "lbl" : "MaxUnpool2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that computes a partial inverse of MaxPool2D.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "comments" : [ "Computes a partial inverse of MaxPool2D." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "MaxUnpool2D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MaxUnpool3DLayer",
      "lbl" : "MaxUnpool3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A pooling layer that computes a partial inverse of MaxPool3D.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#pooling-layers" ]
        },
        "comments" : [ "Computes a partial inverse of MaxPool3D." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "MaxUnpool3D"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MaximumLayer",
      "lbl" : "Maximum Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A merging layer that computes the maximum (element-wise) of a list of inputs.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Maximum" ]
        },
        "comments" : [ "Layer that computes the maximum (element-wise) a list of inputs. It takes as input a list of tensors, all of the same shape, and returns a single tensor (also of the same shape)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MeasurementBias",
      "lbl" : "Measurement Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias arising when features and labels are proxies for desired quantities potentially leading to differential performance.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MemoryAugmentedLLM",
      "lbl" : "Memory-Augmented LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which incorporates external writable and readable memory components, allowing it to store and retrieve information over long contexts.",
          "xrefs" : [ "https://arxiv.org/abs/2306.07174" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Memory-Augmented Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "external memory"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MemoryCellLayer",
      "lbl" : "Memory Cell Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer of cells, each with an internal state or weights.",
          "xrefs" : [ "https://doi.org/10.1162/neco.1997.9.8.1735" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MergingLayer",
      "lbl" : "Merging Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer used to merge a list of inputs.",
          "xrefs" : [ "https://www.tutorialspoint.com/keras/keras_merge_layer.htm" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MetaLearning",
      "lbl" : "Meta-Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task that automatically learns from metadata about machine learning experiments.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MetaLearningLLM",
      "lbl" : "Meta-Learning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which is trained in a way that allows it to quickly adapt to new tasks or datasets through only a few examples or fine-tuning steps, leveraging meta-learned priors about how to efficiently learn."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Meta-Learning Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "few-shot adaptation"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "learning to learn"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MetricLearning",
      "lbl" : "Metric Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that learns a representation function mapping objects into an embedded space.",
          "xrefs" : [ "https://paperswithcode.com/task/metric-learning" ]
        },
        "comments" : [ "Learning a representation function that maps objects into an embedded space." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Distance Metric Learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MinimumLayer",
      "lbl" : "Minimum Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A merging layer that computes the minimum (element-wise) of a list of inputs.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Minimum" ]
        },
        "comments" : [ "Layer that computes the minimum (element-wise) a list of inputs. It takes as input a list of tensors, all of the same shape, and returns a single tensor (also of the same shape)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MixtureofExpertsLLM",
      "lbl" : "Mixture-of-Experts LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which dynamically selects and combines outputs from multiple expert submodels, allowing for efficient scaling by conditionally activating only a subset of model components for each input.",
          "xrefs" : [ "https://proceedings.mlr.press/v162/du22c.html" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Mixture-of-Experts Large Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "MoE Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "conditional computation"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "model parallelism"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ModeConfusionBias",
      "lbl" : "Mode Confusion Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias occurring when modal interfaces confuse human operators causing actions appropriate for a different mode but incorrect for the current situation.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Model",
      "lbl" : "Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An abstract representation of a complex system generally assembled as a set of logical mathematical or conceptual properties to simulate or understand the system's behavior.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Mathematical_model" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ModelSelectionBias",
      "lbl" : "Model Selection Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A processing bias introduced when using data to select a single \"best\" model from many or when an explanatory variable has a weak relationship with the response variable.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ModularLLM",
      "lbl" : "Modular LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A modular language model that consists of multiple specialized components or skills that can be dynamically composed and recombined to solve complex tasks mimicking the modular structure of human cognition.",
          "xrefs" : [ "https://arxiv.org/abs/2302.11529v2" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Modular Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "component skills"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "skill composition"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ModularLanguageModel",
      "lbl" : "Modular Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that consists of multiple specialized components or skills that can be dynamically composed and recombined to solve complex tasks mimicking the modular structure of human cognition.",
          "xrefs" : [ "https://arxiv.org/abs/2302.11529v2" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Modular LM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultiHeadAttentionLayer",
      "lbl" : "MultiHeadAttention Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An attention layer that allows the model to attend to information from different representation subspaces.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/MultiHeadAttention" ]
        },
        "comments" : [ "MultiHeadAttention layer. This is an implementation of multi-headed attention as described in the paper \"Attention is all you Need\" (Vaswani et al., 2017). If query, key, value are the same, then this is self-attention. Each timestep in query attends to the corresponding sequence in key, and returns a fixed-width vector.This layer first projects query, key and value. These are (effectively) a list of tensors of length num_attention_heads, where the corresponding shapes are (batch_size, <query dimensions>, key_dim), (batch_size, <key/value dimensions>, key_dim), (batch_size, <key/value dimensions>, value_dim).Then, the query and key tensors are dot-producted and scaled. These are softmaxed to obtain attention probabilities. The value tensors are then interpolated by these probabilities, then concatenated back to a single tensor. Finally, the result tensor with the last dimension as value_dim can take an linear projection and return. When using MultiHeadAttention inside a custom Layer, the custom Layer must implement build() and call MultiHeadAttention's _build_from_signature(). This enables weights to be restored correctly when the model is loaded." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultiTaskLLM",
      "lbl" : "Multi-Task LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which is trained jointly on multiple language tasks simultaneously, learning shared representations that transfer across tasks."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Multi-Task Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "transfer learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MulticlassClassification",
      "lbl" : "Multiclass Classification",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A classification focused on methods that classify instances into one of three or more classes.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Multiclass_classification" ]
        },
        "comments" : [ "Methods that classify instances into one of three or more classes." ],
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Multinomial Classification"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultidimensionalScaling",
      "lbl" : "Multidimensional Scaling",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A dimensionality reduction method that translates information about the pairwise distances among a set of objects or individuals into a configuration of points mapped into an abstract Cartesian space.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Multidimensional_scaling" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "MDS"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultilingualLLM",
      "lbl" : "Multilingual LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is trained on text from multiple languages learning shared representations that enable zero-shot or few-shot transfer to new languages."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Multilingual Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "cross-lingual transfer"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultimodalDeepLearning",
      "lbl" : "Multimodal Deep Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that processes and links information using various modalities.",
          "xrefs" : [ "https://arxiv.org/abs/2105.11087" ]
        },
        "comments" : [ "Creating models that process and link information using various modalities." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultimodalFusionLLM",
      "lbl" : "Multimodal Fusion LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that learns joint representations across different modalities like text vision and audio in an end-to-end fashion for better cross-modal understanding and generation."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "cross-modal grounding"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultimodalLLM",
      "lbl" : "Multimodal LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A multimodal large language model that learns joint representations across different modalities like text vision and audio in an end-to-end fashion for better cross-modal understanding and generation.",
          "xrefs" : [ "https://arxiv.org/abs/2303.17580" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Multimodal Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "cross-modal grounding"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultimodalLanguageModel",
      "lbl" : "Multimodal Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that learns joint representations across different modalities like text vision and audio in an end-to-end fashion for better cross-modal understanding and generation.",
          "xrefs" : [ "https://arxiv.org/abs/2205.12630" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Mulimodal LM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultimodalLearning",
      "lbl" : "Multimodal Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task that uses multiple modalities of data such as text audio and images to improve learning outcomes.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "A type of deep learning that uses multiple modalities of data, such as text, audio, and images, to improve learning outcomes." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultimodalPromptbasedLanguageModel",
      "lbl" : "Multimodal Prompt-based Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A multimodal large language model which processes prompts that include multiple modalities, such as both text and images, to generate relevant responses.",
          "xrefs" : [ "https://arxiv.org/abs/2210.03094" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultimodalTransformer",
      "lbl" : "Multimodal Transformer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A transformer network that processes and relates information from different modalities such as text images and audio using a shared embedding space and attention mechanism to learn joint representations across modalities."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "unified encoder"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "vision-language model"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/MultiplyLayer",
      "lbl" : "Multiply Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A merging layer that multiplies (element-wise) a list of inputs.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Multiply" ]
        },
        "comments" : [ "Layer that multiplies (element-wise) a list of inputs. It takes as input a list of tensors, all of the same shape, and returns a single tensor (also of the same shape)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/NaturalLanguageProcessing",
      "lbl" : "Natural Language Processing",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on the interactions between computers and human language including programming computers to process and analyze large amounts of natural language data.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Natural_language_processing" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "NLP"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/Network",
      "lbl" : "Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A system of interconnected nodes or entities for communication, computation or data exchange."
        },
        "subsets" : [ "https://w3id.org/aio/ClassSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/NeuralTuringMachineNetwork",
      "lbl" : "Neural Turing Machine Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep feedforward network that combines neural network pattern matching with the algorithmic power of programmable computers.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Neural_Turing_machine" ]
        },
        "comments" : [ "Layers: Input, Hidden, Spiking Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "NTM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/NeuroSymbolicLLM",
      "lbl" : "Neuro-Symbolic LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which combines neural language modeling with symbolic reasoning components, leveraging structured knowledge representations and logical inferences to improve reasoning capabilities."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Neuro-Symbolic Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "knowledge reasoning"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "symbolic grounding"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/NoiseDenseLayer",
      "lbl" : "Noise Dense Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that is a densely-connected neural network layer with added noise for regularization.",
          "xrefs" : [ "https://www.tensorflow.org/addons/api_docs/python/tfa/layers/NoisyDense" ]
        },
        "comments" : [ "Noisy dense layer that injects random noise to the weights of dense layer. Noisy dense layers are fully connected layers whose weights and biases are augmented by factorised Gaussian noise. The factorised Gaussian noise is controlled through gradient descent by a second weights layer. A NoisyDense layer implements the operation: $$ mathrm{NoisyDense}(x) = mathrm{activation}(mathrm{dot}(x, mu + (sigma cdot epsilon)) mathrm{bias}) $$ where mu is the standard weights layer, epsilon is the factorised Gaussian noise, and delta is a second weights layer which controls epsilon." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/NoisyInputLayer",
      "lbl" : "Noisy Input Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An input layer that adds noise to each value.",
          "xrefs" : [ "https://doi.org/10.1109/21.155944" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Normalization",
      "lbl" : "Normalization",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A data preparation that transforms data into a standard format or scale typically to reduce redundancy and improve consistency often involving the adjustment of values measured on different scales to a common scale."
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/NormalizationLayer",
      "lbl" : "Normalization Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A numerical features prepreprocessing layer that normalizes continuous features.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Normalization" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/NumericalFeaturesPreprocessingLayer",
      "lbl" : "Numerical Features Preprocessing Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that performs numerical data preprocessing operations.",
          "xrefs" : [ "https://keras.io/guides/preprocessing_layers/" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/OneshotLearning",
      "lbl" : "One-shot Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that classified objects from one or only a few examples.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/One-shot_learning" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "OSL"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/OrdinalLLM",
      "lbl" : "Ordinal LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is trained to model ordinal relationships and rank outputs rather than model probability distributions over text sequences directly."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Ordinal Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "preference modeling"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "ranking"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/OutputLayer",
      "lbl" : "Output Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer containing the last neurons in the network that produces given outputs for the program.",
          "xrefs" : [ "https://www.techopedia.com/definition/33263/output-layer-neural-networks" ]
        },
        "comments" : [ "The output layer in an artificial neural network is the last layer of neurons that produces given outputs for the program. Though they are made much like other artificial neurons in the neural network, output layer neurons may be built or observed in a different way, given that they are the last “actor” nodes on the network." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/PReLULayer",
      "lbl" : "PReLU Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An activation layer that applies parametric rectified linear unit function element-wise.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/PReLU" ]
        },
        "comments" : [ "Parametric Rectified Linear Unit." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Perceptron",
      "lbl" : "Perceptron",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An artificial neural network with a supervised learning algorithm for binary classification using a linear predictor function."
        },
        "comments" : [ "Layers: Input, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "FFN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Feed-Forward Network"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "SLP"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Single Layer Perceptron"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/PermuteLayer",
      "lbl" : "Permute Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A reshaping layer that permutes the dimensions of the input according to a given pattern.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Permute" ]
        },
        "comments" : [ "Permutes the dimensions of the input according to a given pattern. Useful e.g. connecting RNNs and convnets." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/PersonalizedLLM",
      "lbl" : "Personalized LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that adapts its language modeling and generation to the preferences style and persona of individual users or audiences."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Personalized Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "user adaptation LLM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/PolicyLayer",
      "lbl" : "Policy Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that, after taking a set of states or values as input, predicts a probability distribution of actions to take."
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/PoolingLayer",
      "lbl" : "Pooling Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that serves to mitigate the sensitivity of convolutional layers to location and spatially downsample representations.",
          "xrefs" : [ "https://d2l.ai/chapter_convolutional-neural-networks/pooling.html" ]
        },
        "comments" : [ "Pooling layers serve the dual purposes of mitigating the sensitivity of convolutional layers to location and of spatially downsampling representations." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/PopularityBias",
      "lbl" : "Popularity Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias where more popular items are more exposed under-representing less popular items.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Selection bias where more popular items are more exposed, under-representing less popular items." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/PopulationBias",
      "lbl" : "Population Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias characterized by systematic distortions in demographics or other user characteristics between represented users and the target population.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Preprocessing",
      "lbl" : "Preprocessing",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A process applied to raw data before it is used in a machine learning model, including tasks such as normalization, scaling, encoding, and transformation, to ensure the data is in an appropriate format and quality for analysis.",
          "xrefs" : [ "https://doi.org/10.1109/ICDE.2019.00245" ]
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/PreprocessingLayer",
      "lbl" : "Preprocessing Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that performs data preprocessing operations.",
          "xrefs" : [ "https://www.tensorflow.org/guide/keras/preprocessing_layers" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/PresentationBias",
      "lbl" : "Presentation Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias arising from how information is presented on the Web via a user interface due to rating or ranking of output or through users' self-selected biased interaction.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/PrincipalComponentAnalysis",
      "lbl" : "Principal Component Analysis",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A dimensionality reduction method for analyzing large datasets with high-dimensional features per observation increasing data interpretability while preserving maximum information and enabling visualization.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Principal_component_analysis" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "PCA"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ProbabilisticGraphicalModel",
      "lbl" : "Probabilistic Graphical Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task in which a graph expresses the conditional dependence structure between random variables.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Graphical_model" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Graphical Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "PGM"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Structure Probabilistic Model"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ProbabilisticHiddenLayer",
      "lbl" : "Probabilistic Hidden Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A hidden layer that estimates the probability of a sample being within a certain category."
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ProbabilisticTopicModel",
      "lbl" : "Probabilistic Topic Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A probabilistic graphical model that uses statistical techniques to analyze the words in each text to discover common themes their connections and their changes over time.",
          "xrefs" : [ "https://pyro.ai/examples/prodlda.html" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ProcessingBias",
      "lbl" : "Processing Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A computational bias resulting from judgment modulated by affect influenced by the level of efficacy and efficiency in information processing.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Bias_(statistics)" ]
        },
        "comments" : [ "Judgment modulated by affect, influenced by the level of efficacy and efficiency in information processing; often referred to as aesthetic judgment in cognitive sciences." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Validation Bias"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/PromptbasedFineTuningLLM",
      "lbl" : "Prompt-based Fine-Tuning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which is fine-tuned on a small number of examples or prompts, rather than full task datasets. This allows for rapid adaptation to new tasks with limited data, leveraging the model's few-shot learning capabilities."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Prompt-based Fine-Tuning Large Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Prompt-tuned Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "few-shot learning"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "in-context learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ProportionalHazardsModel",
      "lbl" : "Proportional Hazards Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis for survival analysis where the unique effect of a unit increase in a covariate is multiplicative with respect to the hazard rate.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Proportional_hazards_model" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RNNLayer",
      "lbl" : "RNN Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "The base class for recurrent layers.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RNN" ]
        },
        "comments" : [ "Base class for recurrent layers." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RadialBasisNetwork",
      "lbl" : "Radial Basis Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep feedforward network that uses radial basis functions as activation functions for pattern recognition and interpolation.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Radial_basis_function_network" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "RBFN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "RBN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Radial Basis Function Network"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomBrightnessLayer",
      "lbl" : "RandomBrightness Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that randomly adjusts brightness during training.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RandomBrightness" ]
        },
        "comments" : [ "A preprocessing layer which randomly adjusts brightness during training. This layer will randomly increase/reduce the brightness for the input RGB images. At inference time, the output will be identical to the input. Call the layer with training=True to adjust the brightness of the input. Note that different brightness adjustment factors will be apply to each the images in the batch." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomContrastLayer",
      "lbl" : "RandomContrast Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that randomly adjusts contrast during training.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RandomContrast" ]
        },
        "comments" : [ "A preprocessing layer which randomly adjusts contrast during training. This layer will randomly adjust the contrast of an image or images by a random factor. Contrast is adjusted independently for each channel of each image during training. For each channel, this layer computes the mean of the image pixels in the channel and then adjusts each component x of each pixel to (x - mean) * contrast_factor + mean. Input pixel values can be of any range (e.g. [0., 1.) or [0, 255]) and in integer or floating point dtype. By default, the layer will output floats. The output value will be clipped to the range [0, 255], the valid range of RGB colors." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomCropLayer",
      "lbl" : "RandomCrop Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that randomly crops images during training.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RandomCrop" ]
        },
        "comments" : [ "A preprocessing layer which randomly crops images during training. During training, this layer will randomly choose a location to crop images down to a target size. The layer will crop all the images in the same batch to the same cropping location. At inference time, and during training if an input image is smaller than the target size, the input will be resized and cropped so as to return the largest possible window in the image that matches the target aspect ratio. If you need to apply random cropping at inference time, set training to True when calling the layer. Input pixel values can be of any range (e.g. [0., 1.) or [0, 255]) and of interger or floating point dtype. By default, the layer will output floats." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomEffectsModel",
      "lbl" : "Random Effects Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis where the model parameters are random variables.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Random_effects_model" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "REM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomFlipLayer",
      "lbl" : "RandomFlip Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that randomly flips images during training.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RandomFlip" ]
        },
        "comments" : [ "A preprocessing layer which randomly flips images during training. This layer will flip the images horizontally and or vertically based on the mode attribute. During inference time, the output will be identical to input. Call the layer with training=True to flip the input. Input pixel values can be of any range (e.g. [0., 1.) or [0, 255]) and of interger or floating point dtype. By default, the layer will output floats." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomForest",
      "lbl" : "Random Forest",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An ensemble learning method for classification regression and other tasks that constructs a multitude of decision trees during training.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Random_forest" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomHeightLayer",
      "lbl" : "RandomHeight Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that randomly varies image height during training.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RandomHeight" ]
        },
        "comments" : [ "A preprocessing layer which randomly varies image height during training. This layer adjusts the height of a batch of images by a random factor. The input should be a 3D (unbatched) or 4D (batched) tensor in the \"channels_last\" image data format. Input pixel values can be of any range (e.g. [0., 1.) or [0, 255]) and of interger or floating point dtype. By default, the layer will output floats. By default, this layer is inactive during inference." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomRotationLayer",
      "lbl" : "RandomRotation Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that randomly rotates images during training.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RandomRotation" ]
        },
        "comments" : [ "A preprocessing layer which randomly rotates images during training." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomTranslationLayer",
      "lbl" : "RandomTranslation Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that randomly translates images during training.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RandomTranslation" ]
        },
        "comments" : [ "A preprocessing layer which randomly translates images during training. This layer will apply random translations to each image during training, filling empty space according to fill_mode. aInput pixel values can be of any range (e.g. [0., 1.) or [0, 255]) and of interger or floating point dtype. By default, the layer will output floats." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomWidthLayer",
      "lbl" : "RandomWidth Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that randomly varies image width during training.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RandomWidth" ]
        },
        "comments" : [ "A preprocessing layer which randomly varies image width during training. This layer will randomly adjusts the width of a batch of images of a batch of images by a random factor. The input should be a 3D (unbatched) or 4D (batched) tensor in the \"channels_last\" image data format. Input pixel values can be of any range (e.g. [0., 1.) or [0, 255]) and of interger or floating point dtype. By default, the layer will output floats. By default, this layer is inactive during inference." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RandomZoomLayer",
      "lbl" : "RandomZoom Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that randomly zooms in or out on images during training.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RandomZoom" ]
        },
        "comments" : [ "A preprocessing layer which randomly zooms images during training. This layer will randomly zoom in or out on each axis of an image independently, filling empty space according to fill_mode.Input pixel values can be of any range (e.g. [0., 1.) or [0, 255]) and of interger or floating point dtype. By default, the layer will output floats." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RankingBias",
      "lbl" : "Ranking Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An anchoring bias characterized by the idea that top-ranked results are the most relevant and important leading to more clicks than other results.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RashomonEffectBias",
      "lbl" : "Rashomon Effect Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias characterized by differences in perspective memory recall interpretation and reporting of the same event by multiple persons or witnesses.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Differences in perspective, memory, recall, interpretation, and reporting of the same event by multiple persons or witnesses." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Rashomon Effect"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Rashomon Principle"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ReLUFunction",
      "lbl" : "ReLU Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that returns max(x 0) the element-wise maximum of 0 and the input tensor.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/relu" ]
        },
        "comments" : [ "The ReLU activation function returns: max(x, 0), the element-wise maximum of 0 and the input tensor." ],
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ReLU"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Rectified Linear Unit"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ReLULayer",
      "lbl" : "ReLU Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An activation layer that applies the rectified linear unit function element-wise.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ReLU" ]
        },
        "comments" : [ "Rectified Linear Unit activation function. With default values, it returns element-wise max(x, 0)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ReasoningLLM",
      "lbl" : "Reasoning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that incorporates explicit reasoning capabilities leveraging logical rules axioms or external knowledge to make deductive inferences during language tasks.",
          "xrefs" : [ "https://doi.org/10.18653/v1/2023.acl-long.347" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Rational Large Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Reasoning Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "logical inferences"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "reasoning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RecurrentLayer",
      "lbl" : "Recurrent Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer composed of recurrent units with the number equal to the hidden size of the layer.",
          "xrefs" : [ "https://docs.nvidia.com/deepLearning/performance/dl-performance-recurrent/index.html#recurrent-layer" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RecurrentNeuralNetwork",
      "lbl" : "Recurrent Neural Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A network with connections forming a directed graph along a temporal sequence enabling dynamic behavior."
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "RN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "RecNN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Recurrent Network"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RecursiveLLM",
      "lbl" : "Recursive LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that uses recursive neural network architectures like TreeLSTMs to learn syntactic composition functions improving systematic generalization abilities.",
          "xrefs" : [ "https://doi.org/10.1609/aaai.v33i01.33017450" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Recursive Large Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Self-Attending Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "iterative refinement"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "self-attention"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RecursiveLanguageModel",
      "lbl" : "Recursive Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that uses recursive neural network architectures like TreeLSTMs to learn syntactic composition functions improving systematic generalization abilities.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Recurrent_neural_network" ]
        },
        "comments" : [ "Layers: Input, Memory Cell, Output" ],
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "RLM"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Compositional generalization"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RecursiveNeuralNetwork",
      "lbl" : "Recursive Neural Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that recursively applies weights over structured input to generate structured or scalar predictions.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Recursive_neural_network" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "RecuNN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "RvNN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RegressionAnalysis",
      "lbl" : "Regression Analysis",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A set of statistical processes for estimating the relationships between a dependent variable and one or more independent variables.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Regression_analysis" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Regression analysis"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Regression model"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RegularizationLayer",
      "lbl" : "Regularization Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that applies penalties on layer parameters or layer activity during optimization summed into the loss function that the network optimizes.",
          "xrefs" : [ "https://keras.io/api/layers/regularizers/" ]
        },
        "comments" : [ "Regularizers allow you to apply penalties on layer parameters or layer activity during optimization. These penalties are summed into the loss function that the network optimizes. Regularization penalties are applied on a per-layer basis." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ReinforcementLearning",
      "lbl" : "Reinforcement Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods that do not require labeled input/output pairs or explicit correction of sub-optimal actions focusing instead on balancing exploration and exploitation to optimize performance over time.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Reinforcement_learning" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ReinforcementLearningLLM",
      "lbl" : "Reinforcement Learning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is fine-tuned using reinforcement learning where the model receives rewards for generating text that satisfies certain desired properties or objectives improving the quality safety or alignment of generated text."
        },
        "comments" : [ "An RL-LLM is a language model fine-tuned using reinforcement learning, where the model receives rewards for generating text that satisfies certain desired properties or objectives. This can improve the quality, safety, or alignment of generated text." ],
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "RL-Large Language Model"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Reinforcement Learning Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "decision transformers"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "reward modeling"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RepeatVectorLayer",
      "lbl" : "RepeatVector Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A reshaping layer that repeats the input n times.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/RepeatVector" ]
        },
        "comments" : [ "Repeats the input n times." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RepresentationBias",
      "lbl" : "Representation Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias due to non-random sampling of subgroups making trends non-generalizable to new populations.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Bias due to non-random sampling of subgroups, making trends non-generalizable to new populations." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RepresentationLearning",
      "lbl" : "Representation Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that discovers representations required for feature detection or classification from raw data.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Feature_learning" ]
        },
        "comments" : [ "Discovering representations required for feature detection or classification from raw data." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Feature Learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RescalingLayer",
      "lbl" : "Rescaling Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that rescales input values to a new range.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Rescaling" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ReshapeLayer",
      "lbl" : "Reshape Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A reshaping layer that reshapes the inputs into the given shape.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Reshape" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ReshapingLayer",
      "lbl" : "Reshaping Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that is used to change the shape of the input.",
          "xrefs" : [ "https://keras.io/api/layers/reshaping_layers/reshape/" ]
        },
        "comments" : [ "Reshape layers are used to change the shape of the input." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Reshape Layer"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ResidualNeuralNetwork",
      "lbl" : "Residual Neural Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that employs skip connections to bypass layers facilitating learning of residual functions.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Residual_neural_network" ]
        },
        "comments" : [ "Layers: Input, Weight, BN, ReLU, Weight, BN, Addition, ReLU" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "DRN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Deep Residual Network"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "ResNN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "ResNet"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ResizingLayer",
      "lbl" : "Resizing Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An image preprocessing layer that resizes images to a target size.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Resizing" ]
        },
        "comments" : [ "A preprocessing layer which resizes images. This layer resizes an image input to a target height and width. The input should be a 4D (batched) or 3D (unbatched) tensor in \"channels_last\" format. Input pixel values can be of any range (e.g. [0., 1.) or [0, 255]) and of interger or floating point dtype. By default, the layer will output floats. This layer can be called on tf.RaggedTensor batches of input images of distinct sizes, and will resize the outputs to dense tensors of uniform size." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/RestrictedBoltzmannMachine",
      "lbl" : "Restricted Boltzmann Machine",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A Boltzmann machine network that learns the probability distribution of its input data.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Restricted_Boltzmann_machine" ]
        },
        "comments" : [ "Layers: Backfed Input, Probabilistic Hidden" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "RBM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RetrievalAugmentedLLM",
      "lbl" : "Retrieval-Augmented LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which combines a pre-trained language model with a retrieval system that can access external knowledge sources. This allows the model to condition its generation on relevant retrieved knowledge, improving factual accuracy and knowledge grounding."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Retrieval-Augmented Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "knowledge grounding"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "open-book question answering"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/RidgeRegression",
      "lbl" : "Ridge Regression",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis that estimates the coefficients of multiple regression models in scenarios where the independent variables are highly correlated.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Ridge_regression" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SELUFunction",
      "lbl" : "SELU Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that multiplies scale (> 1) with the output of the ELU function to ensure a slope larger than one for positive inputs.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/selu" ]
        },
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "SELU"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Scaled Exponential Linear Unit"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SeasonalAutoregressiveIntegratedMovingAverage",
      "lbl" : "Seasonal Autoregressive Integrated Moving-Average",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model that extends ARIMA, explicitly supporting univariate time series data with a seasonal component, combining seasonal differencing with ARIMA modeling."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "SARIMA"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SelectionAndSamplingBias",
      "lbl" : "Selection And Sampling Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A computational bias introduced by non-random selection of individuals groups or data failing to ensure representativeness.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Bias introduced by non-random selection of individuals, groups, or data, failing to ensure representativeness." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Sampling Bias"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Selection Bias"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Selection Effect"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SelectiveAdherenceBias",
      "lbl" : "Selective Adherence Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias characterized by the tendency to selectively adopt algorithmic advice that matches pre-existing beliefs and stereotypes.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SelfSupervisedLLM",
      "lbl" : "Self-Supervised LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which learns rich representations by solving pretext tasks that involve predicting parts of the input from other observed parts of the data, without relying on human-annotated labels."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasRelatedSynonym",
          "val" : "Pretext tasks"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SelfsupervisedLearning",
      "lbl" : "Self-supervised Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task that is intermediate between supervised and unsupervised learning and predicts parts of the input data from other observed parts without relying on human-annotated labels.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Self-supervised_learning" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SemiSupervisedLLM",
      "lbl" : "Semi-Supervised LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which combines self-supervised pretraining on unlabeled data with supervised fine-tuning on labeled task data."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Semi-Supervised Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "self-training"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SeparableConvolution1DLayer",
      "lbl" : "SeparableConvolution1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that performs depthwise separable 1D convolution.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/SeparableConv1D" ]
        },
        "comments" : [ "Depthwise separable 1D convolution. This layer performs a depthwise convolution that acts separately on channels, followed by a pointwise convolution that mixes channels. If use_bias is True and a bias initializer is provided, it adds a bias vector to the output. It then optionally applies an activation function to produce the final output.a" ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "SeparableConv1D Layer"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SeparableConvolution2DLayer",
      "lbl" : "SeparableConvolution2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A convolutional layer that performs depthwise separable 2D convolution.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/SeparableConv2D" ]
        },
        "comments" : [ "Depthwise separable 2D convolution. Separable convolutions consist of first performing a depthwise spatial convolution (which acts on each input channel separately) followed by a pointwise convolution which mixes the resulting output channels. The depth_multiplier argument controls how many output channels are generated per input channel in the depthwise step. Intuitively, separable convolutions can be understood as a way to factorize a convolution kernel into two smaller kernels, or as an extreme version of an Inception block." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "SeparableConv2D Layer"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SigmoidFunction",
      "lbl" : "Sigmoid Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that applies the sigmoid activation function sigmoid(x) = 1 / (1 + exp(-x)) always returning a value between 0 and 1.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/sigmoid" ]
        },
        "comments" : [ "Applies the sigmoid activation function sigmoid(x) = 1 / (1 + exp(-x)). For small values (<-5), sigmoid returns a value close to zero, and for large values (>5) the result of the function gets close to 1. Sigmoid is equivalent to a 2-element Softmax, where the second element is assumed to be zero. The sigmoid function always returns a value between 0 and 1." ],
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "tore"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SimpleRNNCellLayer",
      "lbl" : "SimpleRNNCell Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that processes one step within the whole time sequence input for a SimpleRNN layer.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/SimpleRNNCell" ]
        },
        "comments" : [ "Cell class for SimpleRNN. This class processes one step within the whole time sequence input, whereas tf.keras.layer.SimpleRNN processes the whole sequence." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SimpleRNNLayer",
      "lbl" : "SimpleRNN Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A recurrent layer that implements a fully-connected RNN where the output is to be fed back to input.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/SimpleRNN" ]
        },
        "comments" : [ "Fully-connected RNN where the output is to be fed back to input." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SimponsParadoxBias",
      "lbl" : "Simpon's Paradox Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias where the association between two variables changes when controlling for another variable.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Simpson's Paradox"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SocietalBias",
      "lbl" : "Societal Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A systemic bias characterized by being for or against groups or individuals based on social identities demographic factors or immutable physical characteristics often manifesting as stereotypes.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SoftmaxFunction",
      "lbl" : "Softmax Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function where the elements of the output vector are in range (0 1) and sum to 1 and each vector is handled independently.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/softmax" ]
        },
        "comments" : [ "The elements of the output vector are in range (0, 1) and sum to 1. Each vector is handled independently. The axis argument sets which axis of the input the function is applied along. Softmax is often used as the activation for the last layer of a classification network because the result could be interpreted as a probability distribution. The softmax of each vector x is computed as exp(x) / tf.reduce_sum(exp(x)). The input values in are the log-odds of the resulting probability." ],
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SoftmaxLayer",
      "lbl" : "Softmax Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An activation layer that applies the softmax function to the inputs.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Softmax" ]
        },
        "comments" : [ "Softmax activation function." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SoftplusFunction",
      "lbl" : "Softplus Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that is softplus(x) = log(exp(x) + 1).",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/softplus" ]
        },
        "comments" : [ "softplus(x) = log(exp(x) + 1)" ],
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SoftsignFunction",
      "lbl" : "Softsign Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that is softsign(x) = x / (abs(x) + 1).",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/softsign" ]
        },
        "comments" : [ "softsign(x) = x / (abs(x) + 1)" ],
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SparseAutoEncoder",
      "lbl" : "Sparse Auto Encoder",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An autoencoder network with more hidden units than inputs that constrains only a few hidden units to be active at once."
        },
        "comments" : [ "Layers: Input, Hidden, Matched Output-Input" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "SAE"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Sparse AE"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Sparse Autoencoder"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SparseLLM",
      "lbl" : "Sparse LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that uses techniques like pruning or quantization to reduce the number of non-zero parameters in the model making it more parameter-efficient and easier to deploy on resource-constrained devices."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Sparse Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "model compression"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "parameter efficiency"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SparseLearning",
      "lbl" : "Sparse Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A representation learning network that finds sparse representations of input data as a linear combination of basic elements and identifies those elements.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Sparse_dictionary_learning" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Sparse coding"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Sparse dictionary Learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SpatialDropout1DLayer",
      "lbl" : "SpatialDropout1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regularization layer that performs the same function as Dropout but drops entire 1D feature maps instead of individual elements.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/SpatialDropout1D" ]
        },
        "comments" : [ "Spatial 1D version of Dropout. This version performs the same function as Dropout, however, it drops entire 1D feature maps instead of individual elements. If adjacent frames within feature maps are strongly correlated (as is normally the case in early convolution layers) then regular dropout will not regularize the activations and will otherwise just result in an effective Learning rate decrease. In this case, SpatialDropout1D will help promote independence between feature maps and should be used instead." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SpatialDropout2DLayer",
      "lbl" : "SpatialDropout2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regularization layer that performs the same function as Dropout but drops entire 2D feature maps instead of individual elements.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/SpatialDropout2D" ]
        },
        "comments" : [ "Spatial 2D version of Dropout. This version performs the same function as Dropout, however, it drops entire 2D feature maps instead of individual elements. If adjacent pixels within feature maps are strongly correlated (as is normally the case in early convolution layers) then regular dropout will not regularize the activations and will otherwise just result in an effective Learning rate decrease. In this case, SpatialDropout2D will help promote independence between feature maps and should be used instead.a" ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SpatialDropout3DLayer",
      "lbl" : "SpatialDropout3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regularization layer that performs the same function as Dropout but drops entire 3D feature maps instead of individual elements.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/SpatialDropout3D" ]
        },
        "comments" : [ "Spatial 3D version of Dropout. This version performs the same function as Dropout, however, it drops entire 3D feature maps instead of individual elements. If adjacent voxels within feature maps are strongly correlated (as is normally the case in early convolution layers) then regular dropout will not regularize the activations and will otherwise just result in an effective Learning rate decrease. In this case, SpatialDropout3D will help promote independence between feature maps and should be used instead." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SpatialRegression",
      "lbl" : "Spatial Regression",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A regression analysis used to model spatial relationships.",
          "xrefs" : [ "https://gisgeography.com/spatial-regression-models-arcgis/" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SpikingHiddenLayer",
      "lbl" : "Spiking Hidden Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A hidden layer that makes connections to an additional, heterogeneous hidden layer; modeled after biological neural networks.",
          "xrefs" : [ "https://doi.org/10.1016/S0893-6080(97)00011-7" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/StackedRNNCellsLayer",
      "lbl" : "StackedRNNCells Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that allows a stack of RNN cells to behave as a single cell.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/StackedRNNCells" ]
        },
        "comments" : [ "Wrapper allowing a stack of RNN cells to behave as a single cell. Used to implement efficient stacked RNNs." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/StreetlightEffectBias",
      "lbl" : "Streetlight Effect Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias where people search only where it is easiest to look.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Streetlight Effect"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/StringLookupLayer",
      "lbl" : "StringLookup Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A categorical features preprocessing layer that maps string features to integer indices.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/StringLookup" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SubtractLayer",
      "lbl" : "Subtract Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A merging layer that subtracts two inputs.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Subtract" ]
        },
        "comments" : [ "Layer that subtracts two inputs. It takes as input a list of tensors of size 2, both of the same shape, and returns a single tensor, (inputs[0] - inputs[1]), also of the same shape." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SubwordSegmentation",
      "lbl" : "Subword Segmentation",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A data preparation that divides text into subword units which are smaller than words but larger than individual characters to improve the efficiency and effectiveness of natural language processing models by capturing meaningful subunits of words."
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Fragmentation"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Part-word Division"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "Byte Pair Encoding"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "SentencePiece"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SunkCostFallacyBias",
      "lbl" : "Sunk Cost Fallacy Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A bias characterized by the tendency to continue an endeavor due to previously invested resources despite costs outweighing benefits.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "The tendency to continue an endeavor due to previously invested resources, despite costs outweighing benefits." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Sunk Cost Fallacy"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SupervisedBiclustering",
      "lbl" : "Supervised Biclustering",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A biclustering task focused on methods that simultaneously cluster the rows and columns of a labeled matrix considering data labels to enhance cluster coherence.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Biclustering" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Supervised Block Clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Supervised Co-clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Supervised Joint Clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Supervised Two-mode Clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Supervised Two-way Clustering"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SupervisedClustering",
      "lbl" : "Supervised Clustering",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A clustering focused on methods that group labeled objects such that objects in the same group have similar labels relative to those in other groups.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Cluster_analysis" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Supervised Cluster Analysis"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SupervisedLearning",
      "lbl" : "Supervised Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods that learn a function mapping input to output based on example input-output pairs.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Supervised_learning" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SupportVectorMachine",
      "lbl" : "Support Vector Machine",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A network with supervised learning models for classification and regression that maps training examples to points in space maximizing the gap between categories.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Support-vector_machine" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "SVM"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "SVN"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Supper Vector Network"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SurvivalAnalysis",
      "lbl" : "Survival Analysis",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods for analyzing the expected duration of time until one or more events occur such as death in biological organisms or failure in mechanical systems.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Survival_analysis" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SurvivorshipBias",
      "lbl" : "Survivorship Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A processing bias characterized by the tendency to focus on items observations or people that \"survive\" a selection process overlooking those that did not.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "The tendency to focus on items, observations, or people that \"survive\" a selection process, overlooking those that did not." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SwishFunction",
      "lbl" : "Swish Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that is x*sigmoid(x) a smooth non-monotonic function that consistently matches or outperforms ReLU on deep networks.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/swish" ]
        },
        "comments" : [ "x*sigmoid(x). It is a smooth, non-monotonic function that consistently matches or outperforms ReLU on deep networks, it is unbounded above and bounded below." ],
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/SymmetricallyConnectedNetwork",
      "lbl" : "Symmetrically Connected Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A network that is a type of recurrent neural network where connections between units are symmetrical with equal weights in both directions.",
          "xrefs" : [ "https://ieeexplore.ieee.org/document/287176" ]
        },
        "comments" : [ "Symmetrically connected networks are a type of recurrent neural network where connections between units are symmetrical, meaning they have equal weights in both directions. This structure allows the network to maintain consistent information flow and equilibrium." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "SCN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SyncBatchNormLayer",
      "lbl" : "SyncBatchNorm Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A batch normalization layer that applies synchronous Batch Normalization across multiple devices.",
          "xrefs" : [ "https://pytorch.org/docs/stable/nn.html#normalization-layers" ]
        },
        "comments" : [ "Applies Batch Normalization over a N-Dimensional input (a mini-batch of [N-2]D inputs with additional channel dimension) as described in the paper Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift ." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "SyncBatchNorm"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/SystemicBias",
      "lbl" : "Systemic Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A bias resulting from procedures and practices of systems that operate in ways which result in certain social groups being advantaged or favored and others being disadvantaged or devalued.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/TanhFunction",
      "lbl" : "Tanh Function",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A mathematical function that is the hyperbolic tangent activation function.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/activations/tanh" ]
        },
        "comments" : [ "Hyperbolic tangent activation function." ],
        "subsets" : [ "https://w3id.org/aio/ActivationFunctionSubset", "https://w3id.org/aio/FunctionSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "hyperbolic tangent"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/TemporalBias",
      "lbl" : "Temporal Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias arising from differences in populations and behaviors over time.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/TextPreprocessingLayer",
      "lbl" : "Text Preprocessing Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that performs text data preprocessing operations.",
          "xrefs" : [ "https://keras.io/guides/preprocessing_layers/" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/TextVectorizationLayer",
      "lbl" : "TextVectorization Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A text preprocessing layer that maps text features to integer sequences.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/TextVectorization" ]
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ThresholdAutoregressive",
      "lbl" : "Threshold Autoregressive",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model that allows for different autoregressive processes depending on the regime or state of the time series, enabling the capture of nonlinear behaviors.",
          "xrefs" : [ "https://dx.doi.org/10.1080/01621459.1989.10478760" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "TAR"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ThresholdedReLULayer",
      "lbl" : "ThresholdedReLU Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An activation layer that applies the thresholded rectified linear unit function element-wise.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ThresholdedReLU" ]
        },
        "comments" : [ "Thresholded Rectified Linear Unit." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/TimeDistributedLayer",
      "lbl" : "TimeDistributed Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A recurrent layer that applies a layer to every temporal slice of an input.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/TimeDistributed" ]
        },
        "comments" : [ "This wrapper allows to apply a layer to every temporal slice of an input. Every input should be at least 3D, and the dimension of index one of the first input will be considered to be the temporal dimension. Consider a batch of 32 video samples, where each sample is a 128x128 RGB image with channels_last data format, across 10 timesteps. The batch input shape is (32, 10, 128, 128, 3). You can then use TimeDistributed to apply the same Conv2D layer to each of the 10 timesteps, independently:" ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/TimeSeriesAnalysis",
      "lbl" : "Time Series Analysis",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods for analyzing time series data to extract meaningful statistics and characteristics.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Time_series" ]
        },
        "comments" : [ "Methods for analyzing time series data to extract meaningful statistics and characteristics." ],
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/TimeSeriesForecasting",
      "lbl" : "Time Series Forecasting",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods that predict future values based on previously observed values.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Time_series" ]
        },
        "comments" : [ "Methods that predict future values based on previously observed values." ],
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/Tokenization",
      "lbl" : "Tokenization",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A data preparation that converts a sequence of text into smaller meaningful units called tokens typically words or subwords for the purpose of analysis or processing by language models."
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Lexical Analysis"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Text Segmentation"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/TrainingStrategy",
      "lbl" : "TrainingStrategy",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A preprocessing used to train machine learning models including techniques such as supervised learning unsupervised learning reinforcement learning and transfer learning aimed at optimizing model performance."
        },
        "subsets" : [ "https://w3id.org/aio/TrainingStrategySubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Instructional Methods"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Learning Techniques"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/TransferLearning",
      "lbl" : "Transfer Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on methods that reuse or transfer information from previously learned tasks to facilitate the learning of new tasks.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Transfer_learning" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/TransferLearningLLM",
      "lbl" : "Transfer Learning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that leverages knowledge acquired during training on one task to improve performance on different but related tasks facilitating more efficient learning and adaptation."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Transfer LLM"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "transfer learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/TransformerLLM",
      "lbl" : "Transformer LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A transformer language model with large training corpuses and sets of parameters that uses the transformer architecture based on multi-head attention mechanisms allowing it to contextualize tokens within a context window for effective language understanding and generation.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Transformer_(deep_learning_architecture)" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Transformer Large Language Model"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/TransformerLanguageModel",
      "lbl" : "Transformer Language Model",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A language model that uses the transformer architecture based on multi-head attention mechanisms allowing it to contextualize tokens within a context window for effective language understanding and generation.",
          "xrefs" : [ "https://arxiv.org/abs/1706.03762" ]
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Transformer LM"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/TransformerNetwork",
      "lbl" : "Transformer Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that utilizes attention mechanisms to weigh the significance of input data.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Transformer_(machine_Learning_model)" ]
        },
        "comments" : [ "A transformer network utilizes attention mechanisms to weigh the significance of each part of the input data, widely used in natural language processing (NLP) and computer vision (CV)." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/UncertaintyBias",
      "lbl" : "Uncertainty Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A selection and sampling bias favoring groups better represented in training data due to less prediction uncertainty.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Bias favoring groups better represented in training data, due to less prediction uncertainty." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/UnitNormalizationLayer",
      "lbl" : "UnitNormalization Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A recurrent layer that normalizes a batch of inputs so that each input in the batch has a L2 norm equal to 1.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/UnitNormalization" ]
        },
        "comments" : [ "Unit normalization layer. Normalize a batch of inputs so that each input in the batch has a L2 norm equal to 1 (across the axes specified in axis)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/UnsupervisedBiclustering",
      "lbl" : "Unsupervised Biclustering",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A biclustering task focused on methods that simultaneously cluster the rows and columns of an unlabeled input matrix to identify submatrices with coherent patterns.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Biclustering" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Unsupervised Block Clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Unsupervised Co-clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Unsupervised Joint Clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Unsupervised Two-mode Clustering"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Unsupervised Two-way Clustering"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/UnsupervisedClustering",
      "lbl" : "Unsupervised Clustering",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A clustering focused on methods that group a set of unlabeled objects such that objects in the same group are more similar to each other than to those in other groups.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Cluster_analysis" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Unsupervised Cluster Analysis"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/UnsupervisedLLM",
      "lbl" : "Unsupervised LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model that is trained solely on unlabeled data using self-supervised objectives like masked language modeling without any supervised fine-tuning."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Unsupervised Large Language Model"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "self-supervised"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/UnsupervisedLearning",
      "lbl" : "Unsupervised Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task focused on algorithms that learn patterns from unlabeled data.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Unsupervised_learning" ]
        },
        "comments" : [ "Algorithms that learn patterns from unlabeled data." ],
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/UnsupervisedPretrainedNetwork",
      "lbl" : "Unsupervised Pretrained Network",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A network that initializes a discriminative neural net from one trained using an unsupervised criterion.",
          "xrefs" : [ "https://metacademy.org/graphs/concepts/unsupervised_pre_training" ]
        },
        "comments" : [ "Unsupervised pre-training initializes a discriminative neural net from one trained using an unsupervised criterion, aiding in optimization and overfitting issues." ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "UPN"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/UpSampling1DLayer",
      "lbl" : "UpSampling1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A reshaping layer that upsamples the input by repeating each temporal step size times along the time axis.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/UpSampling1D" ]
        },
        "comments" : [ "Upsampling layer for 1D inputs. Repeats each temporal step size times along the time axis." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/UpSampling2DLayer",
      "lbl" : "UpSampling2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that upsamples the input by repeating each row and column size times.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/UpSampling2D" ]
        },
        "comments" : [ "Upsampling layer for 2D inputs. Repeats the rows and columns of the data by size[0] and size[1] respectively." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/UpSampling3DLayer",
      "lbl" : "UpSampling3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that upsamples the input by repeating each depth",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/UpSampling3D" ]
        },
        "comments" : [ "Upsampling layer for 3D inputs." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/UseAndInterpretationBias",
      "lbl" : "Use And Interpretation Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A computational bias characterized by inappropriately analyzing ambiguous stimuli scenarios and events.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Bias inappropriately analyzing ambiguous stimuli, scenarios, and events." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Interpretive Bias"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/UserInteractionBias",
      "lbl" : "User Interaction Bias",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An individual bias arising when a user imposes their own biases during interaction with data output results etc.",
          "xrefs" : [ "https://doi.org/10.6028/NIST.SP.1270" ]
        },
        "comments" : [ "Bias arising when a user imposes their own biases during interaction with data, output, results, etc." ],
        "subsets" : [ "https://w3id.org/aio/BiasSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/VariationalAutoEncoder",
      "lbl" : "Variational Auto Encoder",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "An autoencoder network that imposes a probabilistic structure on the latent space for unsupervised learning."
        },
        "comments" : [ "Layers: Input, Probabilistic Hidden, Matched Output-Input" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "VAE"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/VectorAutoregression",
      "lbl" : "Vector Autoregression",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A model that captures the linear interdependencies among multiple time series, where each variable is modeled as a linear function of its own past values and the past values of all other variables in the system."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "VAR"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/VocabularyReduction",
      "lbl" : "Vocabulary Reduction",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A data preparation that limits the number of unique tokens in a language model's vocabulary by merging or eliminating less frequent tokens thereby optimizing computational efficiency and resource usage."
        },
        "subsets" : [ "https://w3id.org/aio/PreprocessingSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Lexical Simplification"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Lexicon Pruning"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "Vocabulary Condensation"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/WeightedLayer",
      "lbl" : "Weighted Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer of values to be applied to other cells or neurons in a network."
        },
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/WrapperLayer",
      "lbl" : "Wrapper Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A layer that augment the functionality of another layer.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Wrapper" ]
        },
        "comments" : [ "Abstract wrapper base class. Wrappers take another layer and augment it in various ways. Do not use this class as a layer, it is only an abstract base class. Two usable wrappers are the TimeDistributed and Bidirectional wrappers." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ZeroPadding1DLayer",
      "lbl" : "ZeroPadding1D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A reshaping layer that zero-pads the input along the time axis.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ZeroPadding1D" ]
        },
        "comments" : [ "Zero-padding layer for 1D input (e.g. temporal sequence)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ZeroPadding2DLayer",
      "lbl" : "ZeroPadding2D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A reshaping layer that zero-pads the input along the height and width dimensions.",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ZeroPadding2D" ]
        },
        "comments" : [ "Zero-padding layer for 2D input (e.g. picture). This layer can add rows and columns of zeros at the top, bottom, left and right side of an image tensor." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ZeroPadding3DLayer",
      "lbl" : "ZeroPadding3D Layer",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A reshaping layer that zero-pads the input along the depth",
          "xrefs" : [ "https://www.tensorflow.org/api_docs/python/tf/keras/layers/ZeroPadding3D" ]
        },
        "comments" : [ "Zero-padding layer for 3D data (spatial or spatio-temporal)." ],
        "subsets" : [ "https://w3id.org/aio/LayerSubset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ZeroShotLearningLLM",
      "lbl" : "Zero-Shot Learning LLM",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A large language model which performs tasks or understands concepts it has not explicitly been trained on, demonstrating a high degree of generalization and understanding."
        },
        "subsets" : [ "https://w3id.org/aio/ModelSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "Zero-Shot LLM"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "zero-shot learning"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/ZeroshotLearning",
      "lbl" : "Zero-shot Learning",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A deep neural network that predicts classes at test time from classes not observed during training.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Zero-shot_learning" ]
        },
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "ZSL"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/node2vec",
      "lbl" : "node2vec",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task designed to learn continuous feature representations for nodes in a graph by optimizing a neighborhood-preserving objective.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Node2vec" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "N2V"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/node2vecCBOW",
      "lbl" : "node2vec-CBOW",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A node2vec that predicts the current node from a window of surrounding context nodes, with the order of context nodes not influencing prediction.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Node2vec" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "N2V-CBOW"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "CBOW"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/node2vecSkipGram",
      "lbl" : "node2vec-SkipGram",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A node2vec that uses the current node to predict the surrounding window of context nodes, weighing nearby context nodes more heavily than distant ones.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Node2vec" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "N2V-SkipGram"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "SkipGram"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/tDistributedStochasticNeighborembedding",
      "lbl" : "t-Distributed Stochastic Neighbor embedding",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A dimensionality reduction for visualizing high-dimensional data by giving each datapoint a location in a two or three-dimensional map.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding" ]
        },
        "subsets" : [ "https://w3id.org/aio/MachineLearningSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "t-SNE"
        }, {
          "pred" : "hasExactSynonym",
          "val" : "tSNE"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/word2vec",
      "lbl" : "word2vec",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A machine learning task that generates distributed representations of words by training a shallow neural network model, which aims to predict the context of each word within a corpus. This algorithm captures semantic meanings of words through their contextual usage in the text.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Word2vec" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "W2V"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/word2vecCBOW",
      "lbl" : "word2vec-CBOW",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A word2vec that predicts the current word from a window of surrounding context words, ignoring the order of context words.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Word2vec" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "W2V-CBOW"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "CBOW"
        } ]
      }
    }, {
      "id" : "https://w3id.org/aio/word2vecSkipGram",
      "lbl" : "word2vec-SkipGram",
      "type" : "CLASS",
      "meta" : {
        "definition" : {
          "val" : "A word2vec that predicts surrounding context words from the current word, giving more weight to nearby context words than distant ones.",
          "xrefs" : [ "https://en.wikipedia.org/wiki/Word2vec" ]
        },
        "comments" : [ "Layers: Input, Hidden, Output" ],
        "subsets" : [ "https://w3id.org/aio/NetworkSubset" ],
        "synonyms" : [ {
          "pred" : "hasExactSynonym",
          "val" : "W2V-SkipGram"
        }, {
          "pred" : "hasRelatedSynonym",
          "val" : "SkipGram"
        } ]
      }
    }, {
      "id" : "http://purl.obolibrary.org/obo/BFO_0000050",
      "lbl" : "part of",
      "type" : "PROPERTY",
      "propertyType" : "OBJECT",
      "meta" : {
        "definition" : {
          "val" : "A core relation that holds between a part and its whole"
        }
      }
    }, {
      "id" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "lbl" : "has part",
      "type" : "PROPERTY",
      "propertyType" : "DATA",
      "meta" : {
        "definition" : {
          "val" : "A core relation that holds between a whole and its part"
        }
      }
    }, {
      "id" : "http://purl.obolibrary.org/obo/IAO_0000115",
      "lbl" : "definition",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "definition" : {
          "val" : "The official definition, explaining the meaning of a class or property. Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions."
        }
      }
    }, {
      "id" : "http://purl.org/dc/terms/description",
      "lbl" : "description",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "definition" : {
          "val" : "Description may include but is not limited to: an abstract, table of contents, reference to a graphical representation of content or a free-text account of the content."
        }
      }
    }, {
      "id" : "http://purl.org/dc/terms/license",
      "lbl" : "license",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "definition" : {
          "val" : "A legal document giving official permission to do something with the resource."
        }
      }
    }, {
      "id" : "http://purl.org/dc/terms/title",
      "lbl" : "title",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "definition" : {
          "val" : "A name given to the resource."
        }
      }
    }, {
      "id" : "http://www.geneontology.org/formats/oboInOwl#SubsetProperty",
      "lbl" : "subset_property",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION"
    }, {
      "id" : "http://www.geneontology.org/formats/oboInOwl#hasDbXref",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION"
    }, {
      "id" : "http://www.geneontology.org/formats/oboInOwl#hasExactSynonym",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION"
    }, {
      "id" : "http://www.geneontology.org/formats/oboInOwl#hasRelatedSynonym",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION"
    }, {
      "id" : "http://www.geneontology.org/formats/oboInOwl#inSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION"
    }, {
      "id" : "https://w3id.org/aio/ActivationFunctionSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Activation Function Subset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/BiasSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Bias Subset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ClassSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Class Subset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/FunctionSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Function Subset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/InstanceNormalizationLayerSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Instance Normalization Layer Subset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/LayerSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Layer Subset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/MachineLearningSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Machine Learning Subset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/ModelSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Model Subset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/NetworkSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Network Subset" ]
      }
    }, {
      "id" : "https://w3id.org/aio/PreprocessingSubset",
      "type" : "PROPERTY",
      "propertyType" : "ANNOTATION",
      "meta" : {
        "comments" : [ "Preprocessing Subset" ]
      }
    } ],
    "edges" : [ {
      "sub" : "https://w3id.org/aio/AbstractRNNCell",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/ActivationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/ActiveLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/ActivityBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UseAndInterpretationBias"
    }, {
      "sub" : "https://w3id.org/aio/ActivityRegularizationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegularizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/AdaptiveAvgPool1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AdaptiveAvgPool2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AdaptiveAvgPool3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AdaptiveMaxPool1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AdaptiveMaxPool2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AdaptiveMaxPool3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AddLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MergingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AdditionLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/AdditiveAttentionLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/AttentionLayer"
    }, {
      "sub" : "https://w3id.org/aio/AlphaDropoutLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegularizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/AmplificationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ProcessingBias"
    }, {
      "sub" : "https://w3id.org/aio/AnchoringBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/AnnotatorReportingBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/ArtificialNeuralNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Network"
    }, {
      "sub" : "https://w3id.org/aio/AssociationRuleLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SupervisedLearning"
    }, {
      "sub" : "https://w3id.org/aio/AttentionLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/AutoEncoderNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UnsupervisedPretrainedNetwork"
    }, {
      "sub" : "https://w3id.org/aio/AutoEncoderNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/AutoEncoderNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/MatchedInputOutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/AutomationComplacencyBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/AutoregressiveConditionalHeteroskedasticity",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/AutoregressiveDistributedLag",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/AutoregressiveIntegratedMovingAverage",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/AutoregressiveLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/AutoregressiveMovingAverage",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/AvailabilityHeuristicBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/AverageLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MergingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AveragePooling1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AveragePooling2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AveragePooling3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AvgPool1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AvgPool2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/AvgPool3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/BackfedInputLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/BatchNorm1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/BatchNormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/BatchNorm2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/BatchNormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/BatchNorm3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/BatchNormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/BatchNormalizationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/BayesianNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Network"
    }, {
      "sub" : "https://w3id.org/aio/BehavioralBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/Bias",
      "pred" : "is_a",
      "obj" : "http://www.w3.org/2002/07/owl#Thing"
    }, {
      "sub" : "https://w3id.org/aio/Biclustering",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/BidirectionalLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RecurrentLayer"
    }, {
      "sub" : "https://w3id.org/aio/BidirectionalTransformerLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/TransformerLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/BinaryClassification",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Classification"
    }, {
      "sub" : "https://w3id.org/aio/BoltzmannMachineNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SymmetricallyConnectedNetwork"
    }, {
      "sub" : "https://w3id.org/aio/BoltzmannMachineNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/BackfedInputLayer"
    }, {
      "sub" : "https://w3id.org/aio/BoltzmannMachineNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/ProbabilisticHiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/CategoricalFeaturesPreprocessingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/CategoryEncodingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/CategoricalFeaturesPreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/CausalGraphicalModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ProbabilisticGraphicalModel"
    }, {
      "sub" : "https://w3id.org/aio/CausalLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/CenterCropLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/Classification",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SupervisedLearning"
    }, {
      "sub" : "https://w3id.org/aio/Cleaning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DataPreparation"
    }, {
      "sub" : "https://w3id.org/aio/Clustering",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/CognitiveBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/CompositionalGeneralizationLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ComputationalBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Bias"
    }, {
      "sub" : "https://w3id.org/aio/ConcatenateLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MergingLayer"
    }, {
      "sub" : "https://w3id.org/aio/ConceptDriftBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UseAndInterpretationBias"
    }, {
      "sub" : "https://w3id.org/aio/ConfirmationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/ConsumerBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/ContentProductionBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UseAndInterpretationBias"
    }, {
      "sub" : "https://w3id.org/aio/ContinualLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/ContinualLearningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ContrastiveLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/ContrastiveLearningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ControllableLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ConvLSTM1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/ConvLSTM2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/ConvLSTM3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/Convolution1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/Convolution1DTransposeLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/Convolution2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/Convolution2DTransposeLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/Convolution3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/Convolution3DTransposeLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/ConvolutionalLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/Cropping1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ReshapingLayer"
    }, {
      "sub" : "https://w3id.org/aio/Cropping2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/Cropping3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/CrossDomainLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/CurriculumLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/TrainingStrategy"
    }, {
      "sub" : "https://w3id.org/aio/CurriculumLearningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/DataAugmentation",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DataEnhancement"
    }, {
      "sub" : "https://w3id.org/aio/DataDredgingBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UseAndInterpretationBias"
    }, {
      "sub" : "https://w3id.org/aio/DataEnhancement",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Preprocessing"
    }, {
      "sub" : "https://w3id.org/aio/DataGenerationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/DataImputation",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/DataPreparation",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Preprocessing"
    }, {
      "sub" : "https://w3id.org/aio/DatatoTextLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/DecisionTree",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Classification"
    }, {
      "sub" : "https://w3id.org/aio/DecoderLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/DeconvolutionalNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/DeconvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeconvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeconvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/KernelLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeconvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeconvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepActiveLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/DeepBeliefNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UnsupervisedPretrainedNetwork"
    }, {
      "sub" : "https://w3id.org/aio/DeepBeliefNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/BackfedInputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepBeliefNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/MatchedInputOutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepBeliefNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/ProbabilisticHiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalInverseGraphicsNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/AutoEncoderNetwork"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalInverseGraphicsNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalInverseGraphicsNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/KernelLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalInverseGraphicsNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalInverseGraphicsNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalInverseGraphicsNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/ProbabilisticHiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/KernelLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepConvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepFeedForwardNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/DeepFeedForwardNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepFeedForwardNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepFeedForwardNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DeepNeuralNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ArtificialNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/DeepTransferLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/DenoisingAutoEncoder",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/AutoEncoderNetwork"
    }, {
      "sub" : "https://w3id.org/aio/DenoisingAutoEncoder",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/NoisyInputLayer"
    }, {
      "sub" : "https://w3id.org/aio/DenseFeaturesLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/DenseLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/DeploymentBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/GroupBias"
    }, {
      "sub" : "https://w3id.org/aio/DepthwiseConv1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/DepthwiseConv2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/DetectionBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/DialogueLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/DifferentiableLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/DimensionalityReduction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UnsupervisedLearning"
    }, {
      "sub" : "https://w3id.org/aio/DiscretizationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NumericalFeaturesPreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/Distillation",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/TrainingStrategy"
    }, {
      "sub" : "https://w3id.org/aio/DomainAdaptedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/DotLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/DropoutLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegularizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/DunningKrugerEffectBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/CognitiveBias"
    }, {
      "sub" : "https://w3id.org/aio/DynamicConditionalCorrelation",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/ELUFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/ELULayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ActivationLayer"
    }, {
      "sub" : "https://w3id.org/aio/EchoStateNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RecurrentNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/EchoStateNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/EchoStateNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/EchoStateNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/RecurrentLayer"
    }, {
      "sub" : "https://w3id.org/aio/EcologicalFallacyBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/EmbeddingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/EmbodiedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/EmergentBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UseAndInterpretationBias"
    }, {
      "sub" : "https://w3id.org/aio/EncoderDecoderLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/EncoderLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/EnergyBasedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/EnsembleLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/ErrorPropagationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ProcessingBias"
    }, {
      "sub" : "https://w3id.org/aio/EthicalLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/EvaluationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/EvolutionaryLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ExclusionBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/ExplainableLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ExponentialFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/ExponentialSmoothingStateSpaceModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/ExtremeLearningMachine",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/FeedbackNetwork"
    }, {
      "sub" : "https://w3id.org/aio/FactoredLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/FactorizedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/FeatureExtraction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DataEnhancement"
    }, {
      "sub" : "https://w3id.org/aio/FederatedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/FederatedLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/FeedbackLoopBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UseAndInterpretationBias"
    }, {
      "sub" : "https://w3id.org/aio/FeedbackNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ArtificialNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/FeedbackNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/FeedbackNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/FeedbackNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/FixedEffectsModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/FlattenLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ReshapingLayer"
    }, {
      "sub" : "https://w3id.org/aio/FractionalMaxPool2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/FractionalMaxPool3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/FundingBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/GroupBias"
    }, {
      "sub" : "https://w3id.org/aio/GELUFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/GRUCellLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/GRULayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RecurrentLayer"
    }, {
      "sub" : "https://w3id.org/aio/GatedRecurrentUnit",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LongShortTermMemory"
    }, {
      "sub" : "https://w3id.org/aio/GaussianDropoutLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegularizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/GaussianNoiseLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegularizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/GeneralizedAutoregressiveConditionalHeteroskedasticity",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/GeneralizedFewshotLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/GeneralizedLinearModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/GenerativeAdversarialNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UnsupervisedPretrainedNetwork"
    }, {
      "sub" : "https://w3id.org/aio/GenerativeAdversarialNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/BackfedInputLayer"
    }, {
      "sub" : "https://w3id.org/aio/GenerativeAdversarialNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/GenerativeAdversarialNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/MatchedInputOutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/GenerativeAdversarialNetworkAugmentedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/GenerativeCommonsenseLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/GenerativeLanguageInterface",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/GlobalAveragePooling1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/GlobalAveragePooling2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/GlobalAveragePooling3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/GlobalMaxPooling1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/GlobalMaxPooling2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/GlobalMaxPooling3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/GraphConvolutionalNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/GraphConvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/GraphConvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/GraphConvolutionalNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/GraphConvolutionalPolicyNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/GraphConvolutionalNetwork"
    }, {
      "sub" : "https://w3id.org/aio/GraphConvolutionalPolicyNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/PolicyLayer"
    }, {
      "sub" : "https://w3id.org/aio/GraphLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/GroupBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SystemicBias"
    }, {
      "sub" : "https://w3id.org/aio/GroupNormLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/GroupthinkBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/GroupBias"
    }, {
      "sub" : "https://w3id.org/aio/HardSigmoidFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/HashingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/CategoricalFeaturesPreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/HiddenLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/HierarchicalClassification",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Classification"
    }, {
      "sub" : "https://w3id.org/aio/HierarchicalClustering",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Clustering"
    }, {
      "sub" : "https://w3id.org/aio/HierarchicalLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/HistoricalBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Bias"
    }, {
      "sub" : "https://w3id.org/aio/HopfieldNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SymmetricallyConnectedNetwork"
    }, {
      "sub" : "https://w3id.org/aio/HopfieldNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/BackfedInputLayer"
    }, {
      "sub" : "https://w3id.org/aio/HostileAttributionBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UseAndInterpretationBias"
    }, {
      "sub" : "https://w3id.org/aio/HumanBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Bias"
    }, {
      "sub" : "https://w3id.org/aio/HumanReportingBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/ImageAugmentationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/ImagePreprocessingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/ImplicitBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/ImplicitLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/IncremenetalFewshotLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/IndividualBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Bias"
    }, {
      "sub" : "https://w3id.org/aio/InheritedBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ProcessingBias"
    }, {
      "sub" : "https://w3id.org/aio/InputLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/InputLayerLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/InputSpecLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/InstanceNorm1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/InstanceNorm2D",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/InstanceNorm3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/InstitutionalBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SystemicBias"
    }, {
      "sub" : "https://w3id.org/aio/InstructionTunedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/IntegerLookupLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/CategoricalFeaturesPreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/InterpretationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/KernelLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/KnearestNeighborAlgorithm",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/KnearestNeighborClassificationAlgorithm",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Clustering"
    }, {
      "sub" : "https://w3id.org/aio/KnearestNeighborRegressionAlgorithm",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/KnowledgeGroundedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/KnowledgeTransfer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/TrainingStrategy"
    }, {
      "sub" : "https://w3id.org/aio/KohonenNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Network"
    }, {
      "sub" : "https://w3id.org/aio/KohonenNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/KohonenNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/LPPool1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/LPPool2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/LSTMCellLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/LSTMLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RecurrentLayer"
    }, {
      "sub" : "https://w3id.org/aio/LambdaLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/LanguageInterfaceLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/LanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/LargeLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/LassoRegression",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/Layer",
      "pred" : "is_a",
      "obj" : "http://www.w3.org/2002/07/owl#Thing"
    }, {
      "sub" : "https://w3id.org/aio/LayerLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/LayerNormLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LayerNormalizationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LazyBatchNorm1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/BatchNormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LazyBatchNorm2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/BatchNormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LazyBatchNorm3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/BatchNormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LazyInstanceNorm1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LazyInstanceNorm2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LazyInstanceNorm3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LeakyReLULayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ActivationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LeastsquaresAnalysis",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/LifelongLearningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/LinearFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/LinearRegression",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/LinkingBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/UseAndInterpretationBias"
    }, {
      "sub" : "https://w3id.org/aio/LiquidStateMachineNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Network"
    }, {
      "sub" : "https://w3id.org/aio/LiquidStateMachineNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/LiquidStateMachineNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/LiquidStateMachineNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/SpikingHiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/LocalResponseNormLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/LocallyConnected1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LocallyconnectedLayer"
    }, {
      "sub" : "https://w3id.org/aio/LocallyConnected2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LocallyconnectedLayer"
    }, {
      "sub" : "https://w3id.org/aio/LocallyconnectedLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/LogisticRegression",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/LongShortTermMemory",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RecurrentNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/LongShortTermMemory",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/LongShortTermMemory",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/MemoryCellLayer"
    }, {
      "sub" : "https://w3id.org/aio/LongShortTermMemory",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/LossOfSituationalAwarenessBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/LowResourceLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MachineLearningTask",
      "pred" : "is_a",
      "obj" : "http://www.w3.org/2002/07/owl#Thing"
    }, {
      "sub" : "https://w3id.org/aio/ManifoldLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DimensionalityReduction"
    }, {
      "sub" : "https://w3id.org/aio/MarkovChain",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Network"
    }, {
      "sub" : "https://w3id.org/aio/MarkovChain",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/ProbabilisticHiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/MaskedLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MaskingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/MatchedInputOutputLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/MathematicalFunction",
      "pred" : "is_a",
      "obj" : "http://www.w3.org/2002/07/owl#Thing"
    }, {
      "sub" : "https://w3id.org/aio/MaxPooling1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/MaxPooling2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/MaxPooling3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/MaxUnpool1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/MaxUnpool2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/MaxUnpool3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/PoolingLayer"
    }, {
      "sub" : "https://w3id.org/aio/MaximumLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MergingLayer"
    }, {
      "sub" : "https://w3id.org/aio/MeasurementBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/MemoryAugmentedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MemoryCellLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/MergingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/MetaLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/MetaLearningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MetricLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/MinimumLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MergingLayer"
    }, {
      "sub" : "https://w3id.org/aio/MixtureofExpertsLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ModeConfusionBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/Model",
      "pred" : "is_a",
      "obj" : "http://www.w3.org/2002/07/owl#Thing"
    }, {
      "sub" : "https://w3id.org/aio/ModelSelectionBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ProcessingBias"
    }, {
      "sub" : "https://w3id.org/aio/ModularLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ModularLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ModularLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MultiHeadAttentionLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/AttentionLayer"
    }, {
      "sub" : "https://w3id.org/aio/MultiTaskLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MulticlassClassification",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Classification"
    }, {
      "sub" : "https://w3id.org/aio/MultidimensionalScaling",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DimensionalityReduction"
    }, {
      "sub" : "https://w3id.org/aio/MultilingualLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MultimodalDeepLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/MultimodalFusionLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MultimodalLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MultimodalLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MultimodalLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MultimodalLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/MultimodalPromptbasedLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MultimodalLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/MultimodalTransformer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/TransformerNetwork"
    }, {
      "sub" : "https://w3id.org/aio/MultiplyLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MergingLayer"
    }, {
      "sub" : "https://w3id.org/aio/NaturalLanguageProcessing",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/Network",
      "pred" : "is_a",
      "obj" : "http://www.w3.org/2002/07/owl#Thing"
    }, {
      "sub" : "https://w3id.org/aio/NeuralTuringMachineNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepFeedForwardNetwork"
    }, {
      "sub" : "https://w3id.org/aio/NeuralTuringMachineNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/SpikingHiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/NeuroSymbolicLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/NoiseDenseLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/NoisyInputLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/Normalization",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DataPreparation"
    }, {
      "sub" : "https://w3id.org/aio/NormalizationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/NumericalFeaturesPreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/NumericalFeaturesPreprocessingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/OneshotLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/OrdinalLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/OutputLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/PReLULayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ActivationLayer"
    }, {
      "sub" : "https://w3id.org/aio/Perceptron",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ArtificialNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/Perceptron",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/Perceptron",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/PermuteLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ReshapingLayer"
    }, {
      "sub" : "https://w3id.org/aio/PersonalizedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/PolicyLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/PoolingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/PopularityBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/PopulationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/Preprocessing",
      "pred" : "is_a",
      "obj" : "http://www.w3.org/2002/07/owl#Thing"
    }, {
      "sub" : "https://w3id.org/aio/PreprocessingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/PresentationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/PrincipalComponentAnalysis",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DimensionalityReduction"
    }, {
      "sub" : "https://w3id.org/aio/ProbabilisticGraphicalModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/ProbabilisticHiddenLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/ProbabilisticTopicModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ProbabilisticGraphicalModel"
    }, {
      "sub" : "https://w3id.org/aio/ProcessingBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ComputationalBias"
    }, {
      "sub" : "https://w3id.org/aio/PromptbasedFineTuningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ProportionalHazardsModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SurvivalAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/RNNLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RecurrentLayer"
    }, {
      "sub" : "https://w3id.org/aio/RadialBasisNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepFeedForwardNetwork"
    }, {
      "sub" : "https://w3id.org/aio/RandomBrightnessLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RandomContrastLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RandomCropLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RandomEffectsModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/RandomFlipLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RandomForest",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/EnsembleLearning"
    }, {
      "sub" : "https://w3id.org/aio/RandomHeightLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RandomRotationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RandomTranslationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RandomWidthLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RandomZoomLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RankingBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/AnchoringBias"
    }, {
      "sub" : "https://w3id.org/aio/RashomonEffectBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/ReLUFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/ReLULayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ActivationLayer"
    }, {
      "sub" : "https://w3id.org/aio/ReasoningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/RecurrentLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/RecurrentNeuralNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Network"
    }, {
      "sub" : "https://w3id.org/aio/RecursiveLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/RecursiveLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/RecursiveLanguageModel",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/RecursiveLanguageModel",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/MemoryCellLayer"
    }, {
      "sub" : "https://w3id.org/aio/RecursiveLanguageModel",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/RecursiveNeuralNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/RegressionAnalysis",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SupervisedLearning"
    }, {
      "sub" : "https://w3id.org/aio/RegularizationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/ReinforcementLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/ReinforcementLearningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/RepeatVectorLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ReshapingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RepresentationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/RepresentationLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/RescalingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/ReshapeLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ReshapingLayer"
    }, {
      "sub" : "https://w3id.org/aio/ReshapingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/ResidualNeuralNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/ResidualNeuralNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/AdditionLayer"
    }, {
      "sub" : "https://w3id.org/aio/ResidualNeuralNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/BatchNormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/ResidualNeuralNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/ResidualNeuralNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/ReLULayer"
    }, {
      "sub" : "https://w3id.org/aio/ResidualNeuralNetwork",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/WeightedLayer"
    }, {
      "sub" : "https://w3id.org/aio/ResizingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ImagePreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/RestrictedBoltzmannMachine",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/BoltzmannMachineNetwork"
    }, {
      "sub" : "https://w3id.org/aio/RetrievalAugmentedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/RidgeRegression",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/SELUFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/SeasonalAutoregressiveIntegratedMovingAverage",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/SelectionAndSamplingBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ComputationalBias"
    }, {
      "sub" : "https://w3id.org/aio/SelectiveAdherenceBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/SelfSupervisedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/SelfsupervisedLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/SemiSupervisedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/SeparableConvolution1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/SeparableConvolution2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ConvolutionalLayer"
    }, {
      "sub" : "https://w3id.org/aio/SigmoidFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/SimpleRNNCellLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/SimpleRNNLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RecurrentLayer"
    }, {
      "sub" : "https://w3id.org/aio/SimponsParadoxBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/SocietalBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SystemicBias"
    }, {
      "sub" : "https://w3id.org/aio/SoftmaxFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/SoftmaxLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ActivationLayer"
    }, {
      "sub" : "https://w3id.org/aio/SoftplusFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/SoftsignFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/SparseAutoEncoder",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/AutoEncoderNetwork"
    }, {
      "sub" : "https://w3id.org/aio/SparseLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/SparseLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RepresentationLearning"
    }, {
      "sub" : "https://w3id.org/aio/SpatialDropout1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegularizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/SpatialDropout2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegularizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/SpatialDropout3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegularizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/SpatialRegression",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RegressionAnalysis"
    }, {
      "sub" : "https://w3id.org/aio/SpikingHiddenLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/StackedRNNCellsLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/StreetlightEffectBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/StringLookupLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/CategoricalFeaturesPreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/SubtractLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MergingLayer"
    }, {
      "sub" : "https://w3id.org/aio/SubwordSegmentation",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DataPreparation"
    }, {
      "sub" : "https://w3id.org/aio/SunkCostFallacyBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/SupervisedBiclustering",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Biclustering"
    }, {
      "sub" : "https://w3id.org/aio/SupervisedClustering",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Clustering"
    }, {
      "sub" : "https://w3id.org/aio/SupervisedLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/SupportVectorMachine",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Network"
    }, {
      "sub" : "https://w3id.org/aio/SupportVectorMachine",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/SupportVectorMachine",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/SupportVectorMachine",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/SurvivalAnalysis",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/SurvivorshipBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ProcessingBias"
    }, {
      "sub" : "https://w3id.org/aio/SwishFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/SymmetricallyConnectedNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Network"
    }, {
      "sub" : "https://w3id.org/aio/SyncBatchNormLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/BatchNormalizationLayer"
    }, {
      "sub" : "https://w3id.org/aio/SystemicBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Bias"
    }, {
      "sub" : "https://w3id.org/aio/TanhFunction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MathematicalFunction"
    }, {
      "sub" : "https://w3id.org/aio/TemporalBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/TextPreprocessingLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/TextVectorizationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/TextPreprocessingLayer"
    }, {
      "sub" : "https://w3id.org/aio/ThresholdAutoregressive",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/ThresholdedReLULayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ActivationLayer"
    }, {
      "sub" : "https://w3id.org/aio/TimeDistributedLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RecurrentLayer"
    }, {
      "sub" : "https://w3id.org/aio/TimeSeriesAnalysis",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/TimeSeriesForecasting",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/Tokenization",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DataPreparation"
    }, {
      "sub" : "https://w3id.org/aio/TrainingStrategy",
      "pred" : "is_a",
      "obj" : "http://www.w3.org/2002/07/owl#Thing"
    }, {
      "sub" : "https://w3id.org/aio/TransferLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/TransferLearningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/TransformerLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/TransformerLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/TransformerLanguageModel",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/TransformerNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/UncertaintyBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/SelectionAndSamplingBias"
    }, {
      "sub" : "https://w3id.org/aio/UnitNormalizationLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/RecurrentLayer"
    }, {
      "sub" : "https://w3id.org/aio/UnsupervisedBiclustering",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Biclustering"
    }, {
      "sub" : "https://w3id.org/aio/UnsupervisedClustering",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Clustering"
    }, {
      "sub" : "https://w3id.org/aio/UnsupervisedLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/UnsupervisedLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/UnsupervisedPretrainedNetwork",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Network"
    }, {
      "sub" : "https://w3id.org/aio/UpSampling1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ReshapingLayer"
    }, {
      "sub" : "https://w3id.org/aio/UpSampling2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/UpSampling3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/UseAndInterpretationBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ComputationalBias"
    }, {
      "sub" : "https://w3id.org/aio/UserInteractionBias",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/IndividualBias"
    }, {
      "sub" : "https://w3id.org/aio/VariationalAutoEncoder",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/AutoEncoderNetwork"
    }, {
      "sub" : "https://w3id.org/aio/VariationalAutoEncoder",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/ProbabilisticHiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/VectorAutoregression",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Model"
    }, {
      "sub" : "https://w3id.org/aio/VocabularyReduction",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DataPreparation"
    }, {
      "sub" : "https://w3id.org/aio/WeightedLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/WrapperLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/Layer"
    }, {
      "sub" : "https://w3id.org/aio/ZeroPadding1DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ReshapingLayer"
    }, {
      "sub" : "https://w3id.org/aio/ZeroPadding2DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ReshapingLayer"
    }, {
      "sub" : "https://w3id.org/aio/ZeroPadding3DLayer",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/ReshapingLayer"
    }, {
      "sub" : "https://w3id.org/aio/ZeroShotLearningLLM",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/LargeLanguageModel"
    }, {
      "sub" : "https://w3id.org/aio/ZeroshotLearning",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DeepNeuralNetwork"
    }, {
      "sub" : "https://w3id.org/aio/node2vec",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/node2vec",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/node2vec",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/node2vec",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/node2vecCBOW",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/node2vec"
    }, {
      "sub" : "https://w3id.org/aio/node2vecSkipGram",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/node2vec"
    }, {
      "sub" : "https://w3id.org/aio/tDistributedStochasticNeighborembedding",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/DimensionalityReduction"
    }, {
      "sub" : "https://w3id.org/aio/word2vec",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/MachineLearningTask"
    }, {
      "sub" : "https://w3id.org/aio/word2vec",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/HiddenLayer"
    }, {
      "sub" : "https://w3id.org/aio/word2vec",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/InputLayer"
    }, {
      "sub" : "https://w3id.org/aio/word2vec",
      "pred" : "http://purl.obolibrary.org/obo/BFO_0000051",
      "obj" : "https://w3id.org/aio/OutputLayer"
    }, {
      "sub" : "https://w3id.org/aio/word2vecCBOW",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/word2vec"
    }, {
      "sub" : "https://w3id.org/aio/word2vecSkipGram",
      "pred" : "is_a",
      "obj" : "https://w3id.org/aio/word2vec"
    } ]
  } ]
}